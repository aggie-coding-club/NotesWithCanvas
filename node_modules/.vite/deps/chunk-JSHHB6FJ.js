import {
  css_default,
  init_css
} from "./chunk-27OISJIS.js";
import {
  init_listen,
  listen_default
} from "./chunk-2QYR4MTP.js";
import {
  __esm
} from "./chunk-AUZ3RYOM.js";

// node_modules/dom-helpers/esm/triggerEvent.js
function triggerEvent(node, eventName, bubbles, cancelable) {
  if (bubbles === void 0) {
    bubbles = false;
  }
  if (cancelable === void 0) {
    cancelable = true;
  }
  if (node) {
    var event = document.createEvent("HTMLEvents");
    event.initEvent(eventName, bubbles, cancelable);
    node.dispatchEvent(event);
  }
}
var init_triggerEvent = __esm({
  "node_modules/dom-helpers/esm/triggerEvent.js"() {
  }
});

// node_modules/dom-helpers/esm/transitionEnd.js
function parseDuration(node) {
  var str = css_default(node, "transitionDuration") || "";
  var mult = str.indexOf("ms") === -1 ? 1e3 : 1;
  return parseFloat(str) * mult;
}
function emulateTransitionEnd(element, duration, padding) {
  if (padding === void 0) {
    padding = 5;
  }
  var called = false;
  var handle = setTimeout(function() {
    if (!called)
      triggerEvent(element, "transitionend", true);
  }, duration + padding);
  var remove = listen_default(element, "transitionend", function() {
    called = true;
  }, {
    once: true
  });
  return function() {
    clearTimeout(handle);
    remove();
  };
}
function transitionEnd(element, handler, duration, padding) {
  if (duration == null)
    duration = parseDuration(element) || 0;
  var removeEmulate = emulateTransitionEnd(element, duration, padding);
  var remove = listen_default(element, "transitionend", handler);
  return function() {
    removeEmulate();
    remove();
  };
}
var init_transitionEnd = __esm({
  "node_modules/dom-helpers/esm/transitionEnd.js"() {
    init_css();
    init_listen();
    init_triggerEvent();
  }
});

export {
  triggerEvent,
  init_triggerEvent,
  transitionEnd,
  init_transitionEnd
};
//# sourceMappingURL=chunk-JSHHB6FJ.js.map
