import {
  cancel,
  closest,
  closest_exports,
  clsx_m_exports,
  getWidth,
  height,
  init_animationFrame,
  init_closest,
  init_clsx_m,
  init_height,
  init_isDocument,
  init_isWindow,
  init_matches,
  init_offset,
  init_offsetParent,
  init_position,
  init_scrollLeft,
  init_scrollTop,
  init_scrollbarSize,
  init_width,
  isDocument,
  isWindow,
  matches,
  offset,
  offsetParent,
  position,
  request,
  scrollLeft_default,
  scrollTop_default,
  scrollbarSize
} from "./chunk-NDUHJGG7.js";
import {
  init_transitionEnd,
  init_triggerEvent,
  transitionEnd,
  triggerEvent
} from "./chunk-JSHHB6FJ.js";
import {
  activeElement,
  css_default,
  getComputedStyle,
  hyphenate,
  init_activeElement,
  init_css,
  init_getComputedStyle,
  init_hyphenate,
  init_isTransform,
  init_ownerWindow,
  isTransform,
  ownerWindow
} from "./chunk-27OISJIS.js";
import {
  addEventListener_default,
  contains,
  contains_exports,
  init_addEventListener,
  init_contains,
  init_listen,
  init_ownerDocument,
  init_removeEventListener,
  listen_default,
  listen_exports,
  ownerDocument,
  removeEventListener_default
} from "./chunk-2QYR4MTP.js";
import {
  init_querySelectorAll,
  qsa
} from "./chunk-CMHPVY5Y.js";
import {
  addClass,
  hasClass,
  init_addClass,
  init_hasClass,
  init_removeClass,
  removeClass
} from "./chunk-WG2QSCBS.js";
import {
  require_prop_types
} from "./chunk-P6B65IJU.js";
import "./chunk-XTN7VWRG.js";
import {
  require_react
} from "./chunk-KKUTB7ST.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-AUZ3RYOM.js";

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/typeof.js
var require_typeof = __commonJS({
  "node_modules/@babel/runtime/helpers/typeof.js"(exports, module) {
    function _typeof(o) {
      "@babel/helpers - typeof";
      return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o2) {
        return typeof o2;
      } : function(o2) {
        return o2 && "function" == typeof Symbol && o2.constructor === Symbol && o2 !== Symbol.prototype ? "symbol" : typeof o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports, _typeof(o);
    }
    module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPrimitive.js
var require_toPrimitive = __commonJS({
  "node_modules/@babel/runtime/helpers/toPrimitive.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null)
        return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object")
          return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    module.exports = _toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toPropertyKey.js
var require_toPropertyKey = __commonJS({
  "node_modules/@babel/runtime/helpers/toPropertyKey.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    var toPrimitive = require_toPrimitive();
    function _toPropertyKey(arg) {
      var key = toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    module.exports = _toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/@babel/runtime/helpers/defineProperty.js"(exports, module) {
    var toPropertyKey = require_toPropertyKey();
    function _defineProperty(obj, key, value) {
      key = toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/objectSpread2.js
var require_objectSpread2 = __commonJS({
  "node_modules/@babel/runtime/helpers/objectSpread2.js"(exports, module) {
    var defineProperty = require_defineProperty();
    function ownKeys(e, r) {
      var t = Object.keys(e);
      if (Object.getOwnPropertySymbols) {
        var o = Object.getOwnPropertySymbols(e);
        r && (o = o.filter(function(r2) {
          return Object.getOwnPropertyDescriptor(e, r2).enumerable;
        })), t.push.apply(t, o);
      }
      return t;
    }
    function _objectSpread2(e) {
      for (var r = 1; r < arguments.length; r++) {
        var t = null != arguments[r] ? arguments[r] : {};
        r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
          defineProperty(e, r2, t[r2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
          Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
        });
      }
      return e;
    }
    module.exports = _objectSpread2, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js
var require_objectWithoutPropertiesLoose = __commonJS({
  "node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js"(exports, module) {
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/objectWithoutProperties.js
var require_objectWithoutProperties = __commonJS({
  "node_modules/@babel/runtime/helpers/objectWithoutProperties.js"(exports, module) {
    var objectWithoutPropertiesLoose = require_objectWithoutPropertiesLoose();
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    module.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/classCallCheck.js
var require_classCallCheck = __commonJS({
  "node_modules/@babel/runtime/helpers/classCallCheck.js"(exports, module) {
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/createClass.js
var require_createClass = __commonJS({
  "node_modules/@babel/runtime/helpers/createClass.js"(exports, module) {
    var toPropertyKey = require_toPropertyKey();
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", {
        writable: false
      });
      return Constructor;
    }
    module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/setPrototypeOf.js
var require_setPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/setPrototypeOf.js"(exports, module) {
    function _setPrototypeOf(o, p) {
      module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _setPrototypeOf(o, p);
    }
    module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/inherits.js
var require_inherits = __commonJS({
  "node_modules/@babel/runtime/helpers/inherits.js"(exports, module) {
    var setPrototypeOf = require_setPrototypeOf();
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          writable: true,
          configurable: true
        }
      });
      Object.defineProperty(subClass, "prototype", {
        writable: false
      });
      if (superClass)
        setPrototypeOf(subClass, superClass);
    }
    module.exports = _inherits, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/getPrototypeOf.js
var require_getPrototypeOf = __commonJS({
  "node_modules/@babel/runtime/helpers/getPrototypeOf.js"(exports, module) {
    function _getPrototypeOf(o) {
      module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      }, module.exports.__esModule = true, module.exports["default"] = module.exports;
      return _getPrototypeOf(o);
    }
    module.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js
var require_isNativeReflectConstruct = __commonJS({
  "node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js"(exports, module) {
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/assertThisInitialized.js
var require_assertThisInitialized = __commonJS({
  "node_modules/@babel/runtime/helpers/assertThisInitialized.js"(exports, module) {
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var require_possibleConstructorReturn = __commonJS({
  "node_modules/@babel/runtime/helpers/possibleConstructorReturn.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    var assertThisInitialized = require_assertThisInitialized();
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return assertThisInitialized(self2);
    }
    module.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/createSuper.js
var require_createSuper = __commonJS({
  "node_modules/@babel/runtime/helpers/createSuper.js"(exports, module) {
    var getPrototypeOf = require_getPrototypeOf();
    var isNativeReflectConstruct = require_isNativeReflectConstruct();
    var possibleConstructorReturn = require_possibleConstructorReturn();
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return possibleConstructorReturn(this, result);
      };
    }
    module.exports = _createSuper, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/react-big-calendar/lib/utils/constants.js
var require_constants = __commonJS({
  "node_modules/react-big-calendar/lib/utils/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.views = exports.navigate = void 0;
    var navigate = {
      PREVIOUS: "PREV",
      NEXT: "NEXT",
      TODAY: "TODAY",
      DATE: "DATE"
    };
    exports.navigate = navigate;
    var views = {
      MONTH: "month",
      WEEK: "week",
      WORK_WEEK: "work_week",
      DAY: "day",
      AGENDA: "agenda"
    };
    exports.views = views;
  }
});

// node_modules/react-big-calendar/lib/utils/propTypes.js
var require_propTypes = __commonJS({
  "node_modules/react-big-calendar/lib/utils/propTypes.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.views = exports.dateRangeFormat = exports.dateFormat = exports.accessor = exports.DayLayoutAlgorithmPropType = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _constants = require_constants();
    var viewNames = Object.keys(_constants.views).map(function(k) {
      return _constants.views[k];
    });
    var accessor = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]);
    exports.accessor = accessor;
    var dateFormat = _propTypes.default.any;
    exports.dateFormat = dateFormat;
    var dateRangeFormat = _propTypes.default.func;
    exports.dateRangeFormat = dateRangeFormat;
    var views = _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.oneOf(viewNames)), _propTypes.default.objectOf(function(prop, key) {
      var isBuiltinView = viewNames.indexOf(key) !== -1 && typeof prop[key] === "boolean";
      if (isBuiltinView) {
        return null;
      } else {
        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }
        return _propTypes.default.elementType.apply(_propTypes.default, [prop, key].concat(args));
      }
    })]);
    exports.views = views;
    var DayLayoutAlgorithmPropType = _propTypes.default.oneOfType([_propTypes.default.oneOf(["overlap", "no-overlap"]), _propTypes.default.func]);
    exports.DayLayoutAlgorithmPropType = DayLayoutAlgorithmPropType;
  }
});

// node_modules/react-big-calendar/lib/utils/accessors.js
var require_accessors = __commonJS({
  "node_modules/react-big-calendar/lib/utils/accessors.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.accessor = accessor;
    exports.wrapAccessor = void 0;
    var _typeof2 = _interopRequireDefault(require_typeof());
    function accessor(data, field) {
      var value = null;
      if (typeof field === "function")
        value = field(data);
      else if (typeof field === "string" && (0, _typeof2.default)(data) === "object" && data != null && field in data)
        value = data[field];
      return value;
    }
    var wrapAccessor = function wrapAccessor2(acc) {
      return function(data) {
        return accessor(data, acc);
      };
    };
    exports.wrapAccessor = wrapAccessor;
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/DnDContext.js
var require_DnDContext = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/DnDContext.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.DnDContext = void 0;
    var _react = _interopRequireDefault(require_react());
    var DnDContext = _react.default.createContext();
    exports.DnDContext = DnDContext;
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/EventWrapper.js
var require_EventWrapper = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/EventWrapper.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _createSuper2 = _interopRequireDefault(require_createSuper());
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _accessors = require_accessors();
    var _DnDContext = require_DnDContext();
    var EventWrapper = function(_React$Component) {
      (0, _inherits2.default)(EventWrapper2, _React$Component);
      var _super = (0, _createSuper2.default)(EventWrapper2);
      function EventWrapper2() {
        var _this;
        (0, _classCallCheck2.default)(this, EventWrapper2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _this.handleResizeUp = function(e) {
          if (e.button !== 0)
            return;
          _this.context.draggable.onBeginAction(_this.props.event, "resize", "UP");
        };
        _this.handleResizeDown = function(e) {
          if (e.button !== 0)
            return;
          _this.context.draggable.onBeginAction(_this.props.event, "resize", "DOWN");
        };
        _this.handleResizeLeft = function(e) {
          if (e.button !== 0)
            return;
          _this.context.draggable.onBeginAction(_this.props.event, "resize", "LEFT");
        };
        _this.handleResizeRight = function(e) {
          if (e.button !== 0)
            return;
          _this.context.draggable.onBeginAction(_this.props.event, "resize", "RIGHT");
        };
        _this.handleStartDragging = function(e) {
          var _e$target$getAttribut;
          if (e.button !== 0)
            return;
          var isResizeHandle = (_e$target$getAttribut = e.target.getAttribute("class")) === null || _e$target$getAttribut === void 0 ? void 0 : _e$target$getAttribut.includes("rbc-addons-dnd-resize");
          if (!isResizeHandle) {
            var extendedEvent = _this.props.event;
            extendedEvent.sourceResource = _this.props.resource;
            _this.context.draggable.onBeginAction(_this.props.event, "move");
          }
        };
        return _this;
      }
      (0, _createClass2.default)(EventWrapper2, [{
        key: "renderAnchor",
        value: function renderAnchor(direction) {
          var cls = direction === "Up" || direction === "Down" ? "ns" : "ew";
          return _react.default.createElement("div", {
            className: "rbc-addons-dnd-resize-".concat(cls, "-anchor"),
            onMouseDown: this["handleResize".concat(direction)]
          }, _react.default.createElement("div", {
            className: "rbc-addons-dnd-resize-".concat(cls, "-icon")
          }));
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props = this.props, event = _this$props.event, type = _this$props.type, continuesPrior = _this$props.continuesPrior, continuesAfter = _this$props.continuesAfter, resizable = _this$props.resizable;
          var children = this.props.children;
          if (event.__isPreview)
            return _react.default.cloneElement(children, {
              className: (0, _clsx.default)(children.props.className, "rbc-addons-dnd-drag-preview")
            });
          var draggable = this.context.draggable;
          var draggableAccessor = draggable.draggableAccessor, resizableAccessor = draggable.resizableAccessor;
          var isDraggable = draggableAccessor ? !!(0, _accessors.accessor)(event, draggableAccessor) : true;
          if (!isDraggable) {
            return children;
          }
          var isResizable = resizable && (resizableAccessor ? !!(0, _accessors.accessor)(event, resizableAccessor) : true);
          if (isResizable || isDraggable) {
            var newProps = {
              onMouseDown: this.handleStartDragging,
              onTouchStart: this.handleStartDragging
            };
            if (isResizable) {
              var StartAnchor = null;
              var EndAnchor = null;
              if (type === "date") {
                StartAnchor = !continuesPrior && this.renderAnchor("Left");
                EndAnchor = !continuesAfter && this.renderAnchor("Right");
              } else {
                StartAnchor = !continuesPrior && this.renderAnchor("Up");
                EndAnchor = !continuesAfter && this.renderAnchor("Down");
              }
              newProps.children = _react.default.createElement("div", {
                className: "rbc-addons-dnd-resizable"
              }, StartAnchor, children.props.children, EndAnchor);
            }
            if (draggable.dragAndDropAction.interacting && // if an event is being dragged right now
            draggable.dragAndDropAction.event === event) {
              newProps.className = (0, _clsx.default)(children.props.className, "rbc-addons-dnd-dragged-event");
            }
            children = _react.default.cloneElement(children, newProps);
          }
          return children;
        }
      }]);
      return EventWrapper2;
    }(_react.default.Component);
    EventWrapper.contextType = _DnDContext.DnDContext;
    var _default = EventWrapper;
    exports.default = _default;
  }
});

// node_modules/@babel/runtime/helpers/interopRequireWildcard.js
var require_interopRequireWildcard = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireWildcard.js"(exports, module) {
    var _typeof = require_typeof()["default"];
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap)
        return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule)
        return e;
      if (null === e || "object" != _typeof(e) && "function" != typeof e)
        return {
          "default": e
        };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e))
        return t.get(e);
      var n = {
        __proto__: null
      }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e)
        if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
          var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
          i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
        }
      return n["default"] = e, t && t.set(e, n), n;
    }
    module.exports = _interopRequireWildcard, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/dom-helpers/esm/animate.js
function _animate(_ref) {
  var node = _ref.node, properties = _ref.properties, _ref$duration = _ref.duration, duration = _ref$duration === void 0 ? 200 : _ref$duration, easing = _ref.easing, callback = _ref.callback;
  var cssProperties = [];
  var cssValues = {};
  var transforms = "";
  Object.keys(properties).forEach(function(key) {
    var value = properties[key];
    if (isTransform(key))
      transforms += key + "(" + value + ") ";
    else {
      cssValues[key] = value;
      cssProperties.push(hyphenate(key));
    }
  });
  if (transforms) {
    cssValues.transform = transforms;
    cssProperties.push("transform");
  }
  function done(event) {
    if (event.target !== event.currentTarget)
      return;
    css_default(node, reset);
    if (callback)
      callback.call(this, event);
  }
  if (duration > 0) {
    cssValues.transition = cssProperties.join(", ");
    cssValues["transition-duration"] = duration / 1e3 + "s";
    cssValues["transition-delay"] = "0s";
    cssValues["transition-timing-function"] = easing || "linear";
  }
  var removeListener = transitionEnd(node, done, duration);
  node.clientLeft;
  css_default(node, cssValues);
  return {
    cancel: function cancel2() {
      removeListener();
      css_default(node, reset);
    }
  };
}
function animate(nodeOrOptions, properties, duration, easing, callback) {
  if (!("nodeType" in nodeOrOptions)) {
    return _animate(nodeOrOptions);
  }
  if (!properties) {
    throw new Error("must include properties to animate");
  }
  if (typeof easing === "function") {
    callback = easing;
    easing = "";
  }
  return _animate({
    node: nodeOrOptions,
    properties,
    duration,
    easing,
    callback
  });
}
var reset, animate_default;
var init_animate = __esm({
  "node_modules/dom-helpers/esm/animate.js"() {
    init_css();
    init_hyphenate();
    init_isTransform();
    init_transitionEnd();
    reset = {
      transition: "",
      "transition-duration": "",
      "transition-delay": "",
      "transition-timing-function": ""
    };
    animate_default = animate;
  }
});

// node_modules/dom-helpers/esm/attribute.js
function attribute(node, attr, val) {
  if (node) {
    if (typeof val === "undefined") {
      return node.getAttribute(attr);
    }
    if (!val && val !== "") {
      node.removeAttribute(attr);
    } else {
      node.setAttribute(attr, String(val));
    }
  }
}
var init_attribute = __esm({
  "node_modules/dom-helpers/esm/attribute.js"() {
  }
});

// node_modules/dom-helpers/esm/childElements.js
function childElements(node) {
  return node ? Array.from(node.children) : [];
}
var init_childElements = __esm({
  "node_modules/dom-helpers/esm/childElements.js"() {
  }
});

// node_modules/dom-helpers/esm/clear.js
function clear(node) {
  if (node) {
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    return node;
  }
  return null;
}
var init_clear = __esm({
  "node_modules/dom-helpers/esm/clear.js"() {
  }
});

// node_modules/dom-helpers/esm/childNodes.js
function childNodes(node) {
  return node ? toArray(node.childNodes) : [];
}
var toArray;
var init_childNodes = __esm({
  "node_modules/dom-helpers/esm/childNodes.js"() {
    toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);
  }
});

// node_modules/dom-helpers/esm/filterEventHandler.js
function filterEvents(selector, handler) {
  return function filterHandler(e) {
    var top = e.currentTarget;
    var target = e.target;
    var matches2 = qsa(top, selector);
    if (matches2.some(function(match) {
      return contains(match, target);
    }))
      handler.call(this, e);
  };
}
var init_filterEventHandler = __esm({
  "node_modules/dom-helpers/esm/filterEventHandler.js"() {
    init_contains();
    init_querySelectorAll();
  }
});

// node_modules/dom-helpers/esm/insertAfter.js
function insertAfter(node, refNode) {
  if (node && refNode && refNode.parentNode) {
    if (refNode.nextSibling) {
      refNode.parentNode.insertBefore(node, refNode.nextSibling);
    } else {
      refNode.parentNode.appendChild(node);
    }
    return node;
  }
  return null;
}
var init_insertAfter = __esm({
  "node_modules/dom-helpers/esm/insertAfter.js"() {
  }
});

// node_modules/dom-helpers/esm/isInput.js
function isInput(node) {
  return node ? regExpInputs.test(node.nodeName) : false;
}
var regExpInputs;
var init_isInput = __esm({
  "node_modules/dom-helpers/esm/isInput.js"() {
    regExpInputs = /^(?:input|select|textarea|button)$/i;
  }
});

// node_modules/dom-helpers/esm/isVisible.js
function isVisible(node) {
  return node ? !!(node.offsetWidth || node.offsetHeight || node.getClientRects().length) : false;
}
var init_isVisible = __esm({
  "node_modules/dom-helpers/esm/isVisible.js"() {
  }
});

// node_modules/dom-helpers/esm/collectSiblings.js
function collectSiblings(node, refNode, selector) {
  if (refNode === void 0) {
    refNode = null;
  }
  if (selector === void 0) {
    selector = null;
  }
  var siblings2 = [];
  for (; node; node = node.nextElementSibling) {
    if (node !== refNode) {
      if (selector && matches(node, selector)) {
        break;
      }
      siblings2.push(node);
    }
  }
  return siblings2;
}
var init_collectSiblings = __esm({
  "node_modules/dom-helpers/esm/collectSiblings.js"() {
    init_matches();
  }
});

// node_modules/dom-helpers/esm/nextUntil.js
function nextUntil(node, selector) {
  return collectSiblings(node, node, selector);
}
var init_nextUntil = __esm({
  "node_modules/dom-helpers/esm/nextUntil.js"() {
    init_collectSiblings();
  }
});

// node_modules/dom-helpers/esm/collectElements.js
function collectElements(node, direction) {
  var nextNode = null;
  var nodes = [];
  nextNode = node ? node[direction] : null;
  while (nextNode && nextNode.nodeType !== 9) {
    nodes.push(nextNode);
    nextNode = nextNode[direction] || null;
  }
  return nodes;
}
var init_collectElements = __esm({
  "node_modules/dom-helpers/esm/collectElements.js"() {
  }
});

// node_modules/dom-helpers/esm/parents.js
function parents(node) {
  return collectElements(node, "parentElement");
}
var init_parents = __esm({
  "node_modules/dom-helpers/esm/parents.js"() {
    init_collectElements();
  }
});

// node_modules/dom-helpers/esm/prepend.js
function prepend(node, parent) {
  if (node && parent) {
    if (parent.firstElementChild) {
      parent.insertBefore(node, parent.firstElementChild);
    } else {
      parent.appendChild(node);
    }
    return node;
  }
  return null;
}
var init_prepend = __esm({
  "node_modules/dom-helpers/esm/prepend.js"() {
  }
});

// node_modules/dom-helpers/esm/remove.js
function remove(node) {
  if (node && node.parentNode) {
    node.parentNode.removeChild(node);
    return node;
  }
  return null;
}
var init_remove = __esm({
  "node_modules/dom-helpers/esm/remove.js"() {
  }
});

// node_modules/dom-helpers/esm/scrollParent.js
function scrollParent(element, firstPossible) {
  var position2 = css_default(element, "position");
  var excludeStatic = position2 === "absolute";
  var ownerDoc = element.ownerDocument;
  if (position2 === "fixed")
    return ownerDoc || document;
  while ((element = element.parentNode) && !isDocument(element)) {
    var isStatic = excludeStatic && css_default(element, "position") === "static";
    var style = (css_default(element, "overflow") || "") + (css_default(element, "overflow-y") || "") + css_default(element, "overflow-x");
    if (isStatic)
      continue;
    if (/(auto|scroll)/.test(style) && (firstPossible || height(element) < element.scrollHeight)) {
      return element;
    }
  }
  return ownerDoc || document;
}
var init_scrollParent = __esm({
  "node_modules/dom-helpers/esm/scrollParent.js"() {
    init_css();
    init_height();
    init_isDocument();
  }
});

// node_modules/dom-helpers/esm/scrollTo.js
function scrollTo(selected, scrollParent2) {
  var offset2 = offset(selected);
  var poff = {
    top: 0,
    left: 0
  };
  if (!selected)
    return void 0;
  var list = scrollParent2 || scrollParent(selected);
  var isWin = isWindow(list);
  var listScrollTop = scrollTop_default(list);
  var listHeight = height(list, true);
  if (!isWin)
    poff = offset(list);
  offset2 = {
    top: offset2.top - poff.top,
    left: offset2.left - poff.left,
    height: offset2.height,
    width: offset2.width
  };
  var selectedHeight = offset2.height;
  var selectedTop = offset2.top + (isWin ? 0 : listScrollTop);
  var bottom = selectedTop + selectedHeight;
  listScrollTop = listScrollTop > selectedTop ? selectedTop : bottom > listScrollTop + listHeight ? bottom - listHeight : listScrollTop;
  var id = request(function() {
    return scrollTop_default(list, listScrollTop);
  });
  return function() {
    return cancel(id);
  };
}
var init_scrollTo = __esm({
  "node_modules/dom-helpers/esm/scrollTo.js"() {
    init_animationFrame();
    init_height();
    init_isWindow();
    init_offset();
    init_scrollParent();
    init_scrollTop();
  }
});

// node_modules/dom-helpers/esm/siblings.js
function siblings(node) {
  return collectSiblings(node && node.parentElement ? node.parentElement.firstElementChild : null, node);
}
var init_siblings = __esm({
  "node_modules/dom-helpers/esm/siblings.js"() {
    init_collectSiblings();
  }
});

// node_modules/dom-helpers/esm/text.js
function text(node, trim, singleSpaces) {
  if (trim === void 0) {
    trim = true;
  }
  if (singleSpaces === void 0) {
    singleSpaces = true;
  }
  var elementText = "";
  if (node) {
    elementText = (node.textContent || "").replace(regExpNbspEntity, " ").replace(regExpNbspHex, " ");
    if (trim) {
      elementText = elementText.trim();
    }
    if (singleSpaces) {
      elementText = elementText.replace(regExpSpaces, " $1");
    }
  }
  return elementText;
}
var regExpNbspEntity, regExpNbspHex, regExpSpaces;
var init_text = __esm({
  "node_modules/dom-helpers/esm/text.js"() {
    regExpNbspEntity = /&nbsp;/gi;
    regExpNbspHex = /\xA0/g;
    regExpSpaces = /\s+([^\s])/gm;
  }
});

// node_modules/dom-helpers/esm/toggleClass.js
function toggleClass(element, className) {
  if (element.classList)
    element.classList.toggle(className);
  else if (hasClass(element, className))
    removeClass(element, className);
  else
    addClass(element, className);
}
var init_toggleClass = __esm({
  "node_modules/dom-helpers/esm/toggleClass.js"() {
    init_addClass();
    init_hasClass();
    init_removeClass();
  }
});

// node_modules/dom-helpers/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  activeElement: () => activeElement,
  addClass: () => addClass,
  addEventListener: () => addEventListener_default,
  animate: () => animate_default,
  attribute: () => attribute,
  cancelAnimationFrame: () => cancel,
  childElements: () => childElements,
  childNodes: () => childNodes,
  clear: () => clear,
  closest: () => closest,
  contains: () => contains,
  default: () => esm_default,
  filter: () => filterEvents,
  getComputedStyle: () => getComputedStyle,
  hasClass: () => hasClass,
  height: () => height,
  insertAfter: () => insertAfter,
  isInput: () => isInput,
  isVisible: () => isVisible,
  listen: () => listen_default,
  matches: () => matches,
  nextUntil: () => nextUntil,
  offset: () => offset,
  offsetParent: () => offsetParent,
  ownerDocument: () => ownerDocument,
  ownerWindow: () => ownerWindow,
  parents: () => parents,
  position: () => position,
  prepend: () => prepend,
  querySelectorAll: () => qsa,
  remove: () => remove,
  removeClass: () => removeClass,
  removeEventListener: () => removeEventListener_default,
  requestAnimationFrame: () => request,
  scrollLeft: () => scrollLeft_default,
  scrollParent: () => scrollParent,
  scrollTo: () => scrollTo,
  scrollTop: () => scrollTop_default,
  scrollbarSize: () => scrollbarSize,
  siblings: () => siblings,
  style: () => css_default,
  text: () => text,
  toggleClass: () => toggleClass,
  transitionEnd: () => transitionEnd,
  triggerEvent: () => triggerEvent,
  width: () => getWidth
});
var esm_default;
var init_esm = __esm({
  "node_modules/dom-helpers/esm/index.js"() {
    init_activeElement();
    init_addClass();
    init_addEventListener();
    init_animate();
    init_animationFrame();
    init_attribute();
    init_childElements();
    init_clear();
    init_closest();
    init_contains();
    init_childNodes();
    init_css();
    init_filterEventHandler();
    init_getComputedStyle();
    init_hasClass();
    init_height();
    init_insertAfter();
    init_isInput();
    init_isVisible();
    init_listen();
    init_matches();
    init_nextUntil();
    init_offset();
    init_offsetParent();
    init_ownerDocument();
    init_ownerWindow();
    init_parents();
    init_position();
    init_prepend();
    init_querySelectorAll();
    init_remove();
    init_removeClass();
    init_removeEventListener();
    init_scrollbarSize();
    init_scrollLeft();
    init_scrollParent();
    init_scrollTo();
    init_scrollTop();
    init_siblings();
    init_text();
    init_toggleClass();
    init_transitionEnd();
    init_triggerEvent();
    init_width();
    esm_default = {
      addEventListener: addEventListener_default,
      removeEventListener: removeEventListener_default,
      triggerEvent,
      animate: animate_default,
      filter: filterEvents,
      listen: listen_default,
      style: css_default,
      getComputedStyle,
      attribute,
      activeElement,
      ownerDocument,
      ownerWindow,
      requestAnimationFrame: request,
      cancelAnimationFrame: cancel,
      matches,
      height,
      width: getWidth,
      offset,
      offsetParent,
      position,
      contains,
      scrollbarSize,
      scrollLeft: scrollLeft_default,
      scrollParent,
      scrollTo,
      scrollTop: scrollTop_default,
      querySelectorAll: qsa,
      closest,
      addClass,
      removeClass,
      hasClass,
      toggleClass,
      transitionEnd,
      childNodes,
      childElements,
      nextUntil,
      parents,
      siblings,
      clear,
      insertAfter,
      isInput,
      isVisible,
      prepend,
      remove,
      text
    };
  }
});

// node_modules/dom-helpers/cjs/querySelectorAll.js
var require_querySelectorAll = __commonJS({
  "node_modules/dom-helpers/cjs/querySelectorAll.js"(exports, module) {
    "use strict";
    exports.__esModule = true;
    exports.default = qsa2;
    var toArray2 = Function.prototype.bind.call(Function.prototype.call, [].slice);
    function qsa2(element, selector) {
      return toArray2(element.querySelectorAll(selector));
    }
    module.exports = exports["default"];
  }
});

// node_modules/react-big-calendar/lib/Selection.js
var require_Selection = __commonJS({
  "node_modules/react-big-calendar/lib/Selection.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    exports.getBoundsForNode = getBoundsForNode;
    exports.getEventNodeFromPoint = getEventNodeFromPoint;
    exports.getShowMoreNodeFromPoint = getShowMoreNodeFromPoint;
    exports.isEvent = isEvent;
    exports.isShowMore = isShowMore;
    exports.objectsCollide = objectsCollide;
    var _typeof2 = _interopRequireDefault(require_typeof());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _contains = _interopRequireDefault((init_contains(), __toCommonJS(contains_exports)));
    var _closest = _interopRequireDefault((init_closest(), __toCommonJS(closest_exports)));
    var _listen = _interopRequireDefault((init_listen(), __toCommonJS(listen_exports)));
    function addEventListener(type, handler) {
      var target = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : document;
      return (0, _listen.default)(target, type, handler, {
        passive: false
      });
    }
    function isOverContainer(container, x, y) {
      return !container || (0, _contains.default)(container, document.elementFromPoint(x, y));
    }
    function getEventNodeFromPoint(node, _ref) {
      var clientX = _ref.clientX, clientY = _ref.clientY;
      var target = document.elementFromPoint(clientX, clientY);
      return (0, _closest.default)(target, ".rbc-event", node);
    }
    function getShowMoreNodeFromPoint(node, _ref2) {
      var clientX = _ref2.clientX, clientY = _ref2.clientY;
      var target = document.elementFromPoint(clientX, clientY);
      return (0, _closest.default)(target, ".rbc-show-more", node);
    }
    function isEvent(node, bounds) {
      return !!getEventNodeFromPoint(node, bounds);
    }
    function isShowMore(node, bounds) {
      return !!getShowMoreNodeFromPoint(node, bounds);
    }
    function getEventCoordinates(e) {
      var target = e;
      if (e.touches && e.touches.length) {
        target = e.touches[0];
      }
      return {
        clientX: target.clientX,
        clientY: target.clientY,
        pageX: target.pageX,
        pageY: target.pageY
      };
    }
    var clickTolerance = 5;
    var clickInterval = 250;
    var Selection = function() {
      function Selection2(node) {
        var _ref3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref3$global = _ref3.global, global2 = _ref3$global === void 0 ? false : _ref3$global, _ref3$longPressThresh = _ref3.longPressThreshold, longPressThreshold = _ref3$longPressThresh === void 0 ? 250 : _ref3$longPressThresh, _ref3$validContainers = _ref3.validContainers, validContainers = _ref3$validContainers === void 0 ? [] : _ref3$validContainers;
        (0, _classCallCheck2.default)(this, Selection2);
        this.isDetached = false;
        this.container = node;
        this.globalMouse = !node || global2;
        this.longPressThreshold = longPressThreshold;
        this.validContainers = validContainers;
        this._listeners = /* @__PURE__ */ Object.create(null);
        this._handleInitialEvent = this._handleInitialEvent.bind(this);
        this._handleMoveEvent = this._handleMoveEvent.bind(this);
        this._handleTerminatingEvent = this._handleTerminatingEvent.bind(this);
        this._keyListener = this._keyListener.bind(this);
        this._dropFromOutsideListener = this._dropFromOutsideListener.bind(this);
        this._dragOverFromOutsideListener = this._dragOverFromOutsideListener.bind(this);
        this._removeTouchMoveWindowListener = addEventListener("touchmove", function() {
        }, window);
        this._removeKeyDownListener = addEventListener("keydown", this._keyListener);
        this._removeKeyUpListener = addEventListener("keyup", this._keyListener);
        this._removeDropFromOutsideListener = addEventListener("drop", this._dropFromOutsideListener);
        this._removeDragOverFromOutsideListener = addEventListener("dragover", this._dragOverFromOutsideListener);
        this._addInitialEventListener();
      }
      (0, _createClass2.default)(Selection2, [{
        key: "on",
        value: function on(type, handler) {
          var handlers = this._listeners[type] || (this._listeners[type] = []);
          handlers.push(handler);
          return {
            remove: function remove2() {
              var idx = handlers.indexOf(handler);
              if (idx !== -1)
                handlers.splice(idx, 1);
            }
          };
        }
      }, {
        key: "emit",
        value: function emit(type) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          var result;
          var handlers = this._listeners[type] || [];
          handlers.forEach(function(fn) {
            if (result === void 0)
              result = fn.apply(void 0, args);
          });
          return result;
        }
      }, {
        key: "teardown",
        value: function teardown() {
          this.isDetached = true;
          this._listeners = /* @__PURE__ */ Object.create(null);
          this._removeTouchMoveWindowListener && this._removeTouchMoveWindowListener();
          this._removeInitialEventListener && this._removeInitialEventListener();
          this._removeEndListener && this._removeEndListener();
          this._onEscListener && this._onEscListener();
          this._removeMoveListener && this._removeMoveListener();
          this._removeKeyUpListener && this._removeKeyUpListener();
          this._removeKeyDownListener && this._removeKeyDownListener();
          this._removeDropFromOutsideListener && this._removeDropFromOutsideListener();
          this._removeDragOverFromOutsideListener && this._removeDragOverFromOutsideListener();
        }
      }, {
        key: "isSelected",
        value: function isSelected(node) {
          var box = this._selectRect;
          if (!box || !this.selecting)
            return false;
          return objectsCollide(box, getBoundsForNode(node));
        }
      }, {
        key: "filter",
        value: function filter(items) {
          var box = this._selectRect;
          if (!box || !this.selecting)
            return [];
          return items.filter(this.isSelected, this);
        }
        // Adds a listener that will call the handler only after the user has pressed on the screen
        // without moving their finger for 250ms.
      }, {
        key: "_addLongPressListener",
        value: function _addLongPressListener(handler, initialEvent) {
          var _this = this;
          var timer = null;
          var removeTouchMoveListener = null;
          var removeTouchEndListener = null;
          var handleTouchStart = function handleTouchStart2(initialEvent2) {
            timer = setTimeout(function() {
              cleanup();
              handler(initialEvent2);
            }, _this.longPressThreshold);
            removeTouchMoveListener = addEventListener("touchmove", function() {
              return cleanup();
            });
            removeTouchEndListener = addEventListener("touchend", function() {
              return cleanup();
            });
          };
          var removeTouchStartListener = addEventListener("touchstart", handleTouchStart);
          var cleanup = function cleanup2() {
            if (timer) {
              clearTimeout(timer);
            }
            if (removeTouchMoveListener) {
              removeTouchMoveListener();
            }
            if (removeTouchEndListener) {
              removeTouchEndListener();
            }
            timer = null;
            removeTouchMoveListener = null;
            removeTouchEndListener = null;
          };
          if (initialEvent) {
            handleTouchStart(initialEvent);
          }
          return function() {
            cleanup();
            removeTouchStartListener();
          };
        }
        // Listen for mousedown and touchstart events. When one is received, disable the other and setup
        // future event handling based on the type of event.
      }, {
        key: "_addInitialEventListener",
        value: function _addInitialEventListener() {
          var _this2 = this;
          var removeMouseDownListener = addEventListener("mousedown", function(e) {
            _this2._removeInitialEventListener();
            _this2._handleInitialEvent(e);
            _this2._removeInitialEventListener = addEventListener("mousedown", _this2._handleInitialEvent);
          });
          var removeTouchStartListener = addEventListener("touchstart", function(e) {
            _this2._removeInitialEventListener();
            _this2._removeInitialEventListener = _this2._addLongPressListener(_this2._handleInitialEvent, e);
          });
          this._removeInitialEventListener = function() {
            removeMouseDownListener();
            removeTouchStartListener();
          };
        }
      }, {
        key: "_dropFromOutsideListener",
        value: function _dropFromOutsideListener(e) {
          var _getEventCoordinates = getEventCoordinates(e), pageX = _getEventCoordinates.pageX, pageY = _getEventCoordinates.pageY, clientX = _getEventCoordinates.clientX, clientY = _getEventCoordinates.clientY;
          this.emit("dropFromOutside", {
            x: pageX,
            y: pageY,
            clientX,
            clientY
          });
          e.preventDefault();
        }
      }, {
        key: "_dragOverFromOutsideListener",
        value: function _dragOverFromOutsideListener(e) {
          var _getEventCoordinates2 = getEventCoordinates(e), pageX = _getEventCoordinates2.pageX, pageY = _getEventCoordinates2.pageY, clientX = _getEventCoordinates2.clientX, clientY = _getEventCoordinates2.clientY;
          this.emit("dragOverFromOutside", {
            x: pageX,
            y: pageY,
            clientX,
            clientY
          });
          e.preventDefault();
        }
      }, {
        key: "_handleInitialEvent",
        value: function _handleInitialEvent(e) {
          if (this.isDetached) {
            return;
          }
          var _getEventCoordinates3 = getEventCoordinates(e), clientX = _getEventCoordinates3.clientX, clientY = _getEventCoordinates3.clientY, pageX = _getEventCoordinates3.pageX, pageY = _getEventCoordinates3.pageY;
          var node = this.container(), collides, offsetData;
          if (e.which === 3 || e.button === 2 || !isOverContainer(node, clientX, clientY))
            return;
          if (!this.globalMouse && node && !(0, _contains.default)(node, e.target)) {
            var _normalizeDistance = normalizeDistance(0), top = _normalizeDistance.top, left = _normalizeDistance.left, bottom = _normalizeDistance.bottom, right = _normalizeDistance.right;
            offsetData = getBoundsForNode(node);
            collides = objectsCollide({
              top: offsetData.top - top,
              left: offsetData.left - left,
              bottom: offsetData.bottom + bottom,
              right: offsetData.right + right
            }, {
              top: pageY,
              left: pageX
            });
            if (!collides)
              return;
          }
          var result = this.emit("beforeSelect", this._initialEventData = {
            isTouch: /^touch/.test(e.type),
            x: pageX,
            y: pageY,
            clientX,
            clientY
          });
          if (result === false)
            return;
          switch (e.type) {
            case "mousedown":
              this._removeEndListener = addEventListener("mouseup", this._handleTerminatingEvent);
              this._onEscListener = addEventListener("keydown", this._handleTerminatingEvent);
              this._removeMoveListener = addEventListener("mousemove", this._handleMoveEvent);
              break;
            case "touchstart":
              this._handleMoveEvent(e);
              this._removeEndListener = addEventListener("touchend", this._handleTerminatingEvent);
              this._removeMoveListener = addEventListener("touchmove", this._handleMoveEvent);
              break;
            default:
              break;
          }
        }
        // Check whether provided event target element
        // - is contained within a valid container
      }, {
        key: "_isWithinValidContainer",
        value: function _isWithinValidContainer(e) {
          var eventTarget = e.target;
          var containers = this.validContainers;
          if (!containers || !containers.length || !eventTarget) {
            return true;
          }
          return containers.some(function(target) {
            return !!eventTarget.closest(target);
          });
        }
      }, {
        key: "_handleTerminatingEvent",
        value: function _handleTerminatingEvent(e) {
          var _getEventCoordinates4 = getEventCoordinates(e), pageX = _getEventCoordinates4.pageX, pageY = _getEventCoordinates4.pageY;
          this.selecting = false;
          this._removeEndListener && this._removeEndListener();
          this._removeMoveListener && this._removeMoveListener();
          if (!this._initialEventData)
            return;
          var inRoot = !this.container || (0, _contains.default)(this.container(), e.target);
          var isWithinValidContainer = this._isWithinValidContainer(e);
          var bounds = this._selectRect;
          var click = this.isClick(pageX, pageY);
          this._initialEventData = null;
          if (e.key === "Escape" || !isWithinValidContainer) {
            return this.emit("reset");
          }
          if (click && inRoot) {
            return this._handleClickEvent(e);
          }
          if (!click)
            return this.emit("select", bounds);
          return this.emit("reset");
        }
      }, {
        key: "_handleClickEvent",
        value: function _handleClickEvent(e) {
          var _getEventCoordinates5 = getEventCoordinates(e), pageX = _getEventCoordinates5.pageX, pageY = _getEventCoordinates5.pageY, clientX = _getEventCoordinates5.clientX, clientY = _getEventCoordinates5.clientY;
          var now = (/* @__PURE__ */ new Date()).getTime();
          if (this._lastClickData && now - this._lastClickData.timestamp < clickInterval) {
            this._lastClickData = null;
            return this.emit("doubleClick", {
              x: pageX,
              y: pageY,
              clientX,
              clientY
            });
          }
          this._lastClickData = {
            timestamp: now
          };
          return this.emit("click", {
            x: pageX,
            y: pageY,
            clientX,
            clientY
          });
        }
      }, {
        key: "_handleMoveEvent",
        value: function _handleMoveEvent(e) {
          if (this._initialEventData === null || this.isDetached) {
            return;
          }
          var _this$_initialEventDa = this._initialEventData, x = _this$_initialEventDa.x, y = _this$_initialEventDa.y;
          var _getEventCoordinates6 = getEventCoordinates(e), pageX = _getEventCoordinates6.pageX, pageY = _getEventCoordinates6.pageY;
          var w = Math.abs(x - pageX);
          var h = Math.abs(y - pageY);
          var left = Math.min(pageX, x), top = Math.min(pageY, y), old = this.selecting;
          if (this.isClick(pageX, pageY) && !old && !(w || h)) {
            return;
          }
          this.selecting = true;
          this._selectRect = {
            top,
            left,
            x: pageX,
            y: pageY,
            right: left + w,
            bottom: top + h
          };
          if (!old) {
            this.emit("selectStart", this._initialEventData);
          }
          if (!this.isClick(pageX, pageY))
            this.emit("selecting", this._selectRect);
          e.preventDefault();
        }
      }, {
        key: "_keyListener",
        value: function _keyListener(e) {
          this.ctrl = e.metaKey || e.ctrlKey;
        }
      }, {
        key: "isClick",
        value: function isClick(pageX, pageY) {
          var _this$_initialEventDa2 = this._initialEventData, x = _this$_initialEventDa2.x, y = _this$_initialEventDa2.y, isTouch = _this$_initialEventDa2.isTouch;
          return !isTouch && Math.abs(pageX - x) <= clickTolerance && Math.abs(pageY - y) <= clickTolerance;
        }
      }]);
      return Selection2;
    }();
    function normalizeDistance() {
      var distance = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
      if ((0, _typeof2.default)(distance) !== "object")
        distance = {
          top: distance,
          left: distance,
          right: distance,
          bottom: distance
        };
      return distance;
    }
    function objectsCollide(nodeA, nodeB) {
      var tolerance = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
      var _getBoundsForNode = getBoundsForNode(nodeA), aTop = _getBoundsForNode.top, aLeft = _getBoundsForNode.left, _getBoundsForNode$rig = _getBoundsForNode.right, aRight = _getBoundsForNode$rig === void 0 ? aLeft : _getBoundsForNode$rig, _getBoundsForNode$bot = _getBoundsForNode.bottom, aBottom = _getBoundsForNode$bot === void 0 ? aTop : _getBoundsForNode$bot;
      var _getBoundsForNode2 = getBoundsForNode(nodeB), bTop = _getBoundsForNode2.top, bLeft = _getBoundsForNode2.left, _getBoundsForNode2$ri = _getBoundsForNode2.right, bRight = _getBoundsForNode2$ri === void 0 ? bLeft : _getBoundsForNode2$ri, _getBoundsForNode2$bo = _getBoundsForNode2.bottom, bBottom = _getBoundsForNode2$bo === void 0 ? bTop : _getBoundsForNode2$bo;
      return !// 'a' bottom doesn't touch 'b' top
      (aBottom - tolerance < bTop || // 'a' top doesn't touch 'b' bottom
      aTop + tolerance > bBottom || // 'a' right doesn't touch 'b' left
      aRight - tolerance < bLeft || // 'a' left doesn't touch 'b' right
      aLeft + tolerance > bRight);
    }
    function getBoundsForNode(node) {
      if (!node.getBoundingClientRect)
        return node;
      var rect = node.getBoundingClientRect(), left = rect.left + pageOffset("left"), top = rect.top + pageOffset("top");
      return {
        top,
        left,
        right: (node.offsetWidth || 0) + left,
        bottom: (node.offsetHeight || 0) + top
      };
    }
    function pageOffset(dir) {
      if (dir === "left")
        return window.pageXOffset || document.body.scrollLeft || 0;
      if (dir === "top")
        return window.pageYOffset || document.body.scrollTop || 0;
    }
    var _default = Selection;
    exports.default = _default;
  }
});

// node_modules/react-big-calendar/lib/TimeGridEvent.js
var require_TimeGridEvent = __commonJS({
  "node_modules/react-big-calendar/lib/TimeGridEvent.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _defineProperty2 = _interopRequireDefault(require_defineProperty());
    var _objectSpread4 = _interopRequireDefault(require_objectSpread2());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _react = _interopRequireDefault(require_react());
    function stringifyPercent(v) {
      return typeof v === "string" ? v : v + "%";
    }
    function TimeGridEvent(props) {
      var style = props.style, className = props.className, event = props.event, accessors = props.accessors, rtl = props.rtl, selected = props.selected, label = props.label, continuesPrior = props.continuesPrior, continuesAfter = props.continuesAfter, getters = props.getters, onClick = props.onClick, onDoubleClick = props.onDoubleClick, isBackgroundEvent = props.isBackgroundEvent, onKeyPress = props.onKeyPress, _props$components = props.components, Event = _props$components.event, EventWrapper = _props$components.eventWrapper;
      var title = accessors.title(event);
      var tooltip = accessors.tooltip(event);
      var end = accessors.end(event);
      var start = accessors.start(event);
      var userProps = getters.eventProp(event, start, end, selected);
      var height2 = style.height, top = style.top, width = style.width, xOffset = style.xOffset;
      var inner = [_react.default.createElement("div", {
        key: "1",
        className: "rbc-event-label"
      }, label), _react.default.createElement("div", {
        key: "2",
        className: "rbc-event-content"
      }, Event ? _react.default.createElement(Event, {
        event,
        title
      }) : title)];
      var eventStyle = isBackgroundEvent ? (0, _objectSpread4.default)((0, _objectSpread4.default)({}, userProps.style), {}, (0, _defineProperty2.default)({
        top: stringifyPercent(top),
        height: stringifyPercent(height2),
        // Adding 10px to take events container right margin into account
        width: "calc(".concat(width, " + 10px)")
      }, rtl ? "right" : "left", stringifyPercent(Math.max(0, xOffset)))) : (0, _objectSpread4.default)((0, _objectSpread4.default)({}, userProps.style), {}, (0, _defineProperty2.default)({
        top: stringifyPercent(top),
        width: stringifyPercent(width),
        height: stringifyPercent(height2)
      }, rtl ? "right" : "left", stringifyPercent(xOffset)));
      return _react.default.createElement(EventWrapper, Object.assign({
        type: "time"
      }, props), _react.default.createElement("div", {
        onClick,
        onDoubleClick,
        style: eventStyle,
        onKeyPress,
        title: tooltip ? (typeof label === "string" ? label + ": " : "") + tooltip : void 0,
        className: (0, _clsx.default)(isBackgroundEvent ? "rbc-background-event" : "rbc-event", className, userProps.className, {
          "rbc-selected": selected,
          "rbc-event-continues-earlier": continuesPrior,
          "rbc-event-continues-later": continuesAfter
        })
      }, inner));
    }
    var _default = TimeGridEvent;
    exports.default = _default;
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/common.js
var require_common = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/common.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.dragAccessors = void 0;
    exports.eventTimes = eventTimes;
    exports.mergeComponents = mergeComponents;
    exports.pointInColumn = pointInColumn;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _accessors = require_accessors();
    var _react = require_react();
    var _excluded = ["children"];
    var dragAccessors = {
      start: (0, _accessors.wrapAccessor)(function(e) {
        return e.start;
      }),
      end: (0, _accessors.wrapAccessor)(function(e) {
        return e.end;
      })
    };
    exports.dragAccessors = dragAccessors;
    function nest() {
      for (var _len = arguments.length, Components = new Array(_len), _key = 0; _key < _len; _key++) {
        Components[_key] = arguments[_key];
      }
      var factories = Components.filter(Boolean).map(_react.createFactory);
      var Nest = function Nest2(_ref) {
        var children = _ref.children, props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
        return factories.reduceRight(function(child, factory) {
          return factory(props, child);
        }, children);
      };
      return Nest;
    }
    function mergeComponents() {
      var components = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var addons = arguments.length > 1 ? arguments[1] : void 0;
      var keys = Object.keys(addons);
      var result = (0, _objectSpread2.default)({}, components);
      keys.forEach(function(key) {
        result[key] = components[key] ? nest(components[key], addons[key]) : addons[key];
      });
      return result;
    }
    function pointInColumn(bounds, point) {
      var left = bounds.left, right = bounds.right, top = bounds.top;
      var x = point.x, y = point.y;
      return x < right + 10 && x > left && y > top;
    }
    function eventTimes(event, accessors, localizer) {
      var start = accessors.start(event);
      var end = accessors.end(event);
      var isZeroDuration = localizer.eq(start, end, "minutes") && localizer.diff(start, end, "minutes") === 0;
      if (isZeroDuration)
        end = localizer.add(end, 1, "day");
      var duration = localizer.diff(start, end, "milliseconds");
      return {
        start,
        end,
        duration
      };
    }
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/EventContainerWrapper.js
var require_EventContainerWrapper = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/EventContainerWrapper.js"(exports) {
    "use strict";
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _createSuper2 = _interopRequireDefault(require_createSuper());
    var _react = _interopRequireDefault(require_react());
    var _DnDContext = require_DnDContext();
    var _domHelpers = (init_esm(), __toCommonJS(esm_exports));
    var _querySelectorAll = _interopRequireDefault(require_querySelectorAll());
    var _Selection = _interopRequireWildcard(require_Selection());
    var _TimeGridEvent = _interopRequireDefault(require_TimeGridEvent());
    var _common = require_common();
    var EventContainerWrapper = function(_React$Component) {
      (0, _inherits2.default)(EventContainerWrapper2, _React$Component);
      var _super = (0, _createSuper2.default)(EventContainerWrapper2);
      function EventContainerWrapper2() {
        var _this;
        (0, _classCallCheck2.default)(this, EventContainerWrapper2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _this.handleMove = function(point, bounds) {
          if (!(0, _common.pointInColumn)(bounds, point))
            return _this.reset();
          var event = _this.context.draggable.dragAndDropAction.event;
          var _this$props = _this.props, accessors = _this$props.accessors, slotMetrics = _this$props.slotMetrics;
          var newSlot = slotMetrics.closestSlotFromPoint({
            y: point.y - _this.eventOffsetTop,
            x: point.x
          }, bounds);
          var _eventTimes = (0, _common.eventTimes)(event, accessors, _this.props.localizer), duration = _eventTimes.duration;
          var newEnd = _this.props.localizer.add(newSlot, duration, "milliseconds");
          _this.update(event, slotMetrics.getRange(newSlot, newEnd, false, true));
        };
        _this.handleDropFromOutside = function(point, boundaryBox) {
          var _this$props2 = _this.props, slotMetrics = _this$props2.slotMetrics, resource = _this$props2.resource;
          var start = slotMetrics.closestSlotFromPoint({
            y: point.y,
            x: point.x
          }, boundaryBox);
          _this.context.draggable.onDropFromOutside({
            start,
            end: slotMetrics.nextSlot(start),
            allDay: false,
            resource
          });
        };
        _this.updateParentScroll = function(parent, node) {
          setTimeout(function() {
            var draggedEl = (0, _querySelectorAll.default)(node, ".rbc-addons-dnd-drag-preview")[0];
            if (draggedEl) {
              if (draggedEl.offsetTop < parent.scrollTop) {
                (0, _domHelpers.scrollTop)(parent, Math.max(draggedEl.offsetTop, 0));
              } else if (draggedEl.offsetTop + draggedEl.offsetHeight > parent.scrollTop + parent.clientHeight) {
                (0, _domHelpers.scrollTop)(parent, Math.min(draggedEl.offsetTop - parent.offsetHeight + draggedEl.offsetHeight, parent.scrollHeight));
              }
            }
          });
        };
        _this._selectable = function() {
          var wrapper = _this.ref.current;
          var node = wrapper.children[0];
          var isBeingDragged = false;
          var selector = _this._selector = new _Selection.default(function() {
            return wrapper.closest(".rbc-time-view");
          });
          var parent = (0, _domHelpers.scrollParent)(wrapper);
          selector.on("beforeSelect", function(point) {
            var dragAndDropAction = _this.context.draggable.dragAndDropAction;
            if (!dragAndDropAction.action)
              return false;
            if (dragAndDropAction.action === "resize") {
              return (0, _common.pointInColumn)((0, _Selection.getBoundsForNode)(node), point);
            }
            var eventNode = (0, _Selection.getEventNodeFromPoint)(node, point);
            if (!eventNode)
              return false;
            _this.eventOffsetTop = point.y - (0, _Selection.getBoundsForNode)(eventNode).top;
          });
          selector.on("selecting", function(box) {
            var bounds = (0, _Selection.getBoundsForNode)(node);
            var dragAndDropAction = _this.context.draggable.dragAndDropAction;
            if (dragAndDropAction.action === "move") {
              _this.updateParentScroll(parent, node);
              _this.handleMove(box, bounds);
            }
            if (dragAndDropAction.action === "resize") {
              _this.updateParentScroll(parent, node);
              _this.handleResize(box, bounds);
            }
          });
          selector.on("dropFromOutside", function(point) {
            if (!_this.context.draggable.onDropFromOutside)
              return;
            var bounds = (0, _Selection.getBoundsForNode)(node);
            if (!(0, _common.pointInColumn)(bounds, point))
              return;
            _this.handleDropFromOutside(point, bounds);
          });
          selector.on("dragOver", function(point) {
            if (!_this.context.draggable.dragFromOutsideItem)
              return;
            var bounds = (0, _Selection.getBoundsForNode)(node);
            _this.handleDropFromOutside(point, bounds);
          });
          selector.on("selectStart", function() {
            isBeingDragged = true;
            _this.context.draggable.onStart();
          });
          selector.on("select", function(point) {
            var bounds = (0, _Selection.getBoundsForNode)(node);
            isBeingDragged = false;
            var dragAndDropAction = _this.context.draggable.dragAndDropAction;
            if (dragAndDropAction.action === "resize") {
              _this.handleInteractionEnd();
            } else if (!_this.state.event || !(0, _common.pointInColumn)(bounds, point)) {
              return;
            } else {
              _this.handleInteractionEnd();
            }
          });
          selector.on("click", function() {
            if (isBeingDragged)
              _this.reset();
            _this.context.draggable.onEnd(null);
          });
          selector.on("reset", function() {
            _this.reset();
            _this.context.draggable.onEnd(null);
          });
        };
        _this.handleInteractionEnd = function() {
          var resource = _this.props.resource;
          var event = _this.state.event;
          _this.reset();
          _this.context.draggable.onEnd({
            start: event.start,
            end: event.end,
            resourceId: resource
          });
        };
        _this._teardownSelectable = function() {
          if (!_this._selector)
            return;
          _this._selector.teardown();
          _this._selector = null;
        };
        _this.state = {};
        _this.ref = _react.default.createRef();
        return _this;
      }
      (0, _createClass2.default)(EventContainerWrapper2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this._selectable();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._teardownSelectable();
        }
      }, {
        key: "reset",
        value: function reset2() {
          if (this.state.event)
            this.setState({
              event: null,
              top: null,
              height: null
            });
        }
      }, {
        key: "update",
        value: function update(event, _ref) {
          var startDate = _ref.startDate, endDate = _ref.endDate, top = _ref.top, height2 = _ref.height;
          var lastEvent = this.state.event;
          if (lastEvent && startDate === lastEvent.start && endDate === lastEvent.end) {
            return;
          }
          this.setState({
            top,
            height: height2,
            event: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, event), {}, {
              start: startDate,
              end: endDate
            })
          });
        }
      }, {
        key: "handleResize",
        value: function handleResize(point, bounds) {
          var _this$props3 = this.props, accessors = _this$props3.accessors, slotMetrics = _this$props3.slotMetrics, localizer = _this$props3.localizer;
          var _this$context$draggab = this.context.draggable.dragAndDropAction, event = _this$context$draggab.event, direction = _this$context$draggab.direction;
          var newTime = slotMetrics.closestSlotFromPoint(point, bounds);
          var _eventTimes2 = (0, _common.eventTimes)(event, accessors, localizer), start = _eventTimes2.start, end = _eventTimes2.end;
          var newRange;
          if (direction === "UP") {
            var newStart = localizer.min(newTime, slotMetrics.closestSlotFromDate(end, -1));
            newRange = slotMetrics.getRange(newStart, end);
            newRange = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, newRange), {}, {
              endDate: end
            });
          } else if (direction === "DOWN") {
            var newEnd = localizer.max(newTime, slotMetrics.closestSlotFromDate(start));
            newRange = slotMetrics.getRange(start, newEnd);
            newRange = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, newRange), {}, {
              startDate: start
            });
          }
          this.update(event, newRange);
        }
      }, {
        key: "renderContent",
        value: function renderContent() {
          var _this$props4 = this.props, children = _this$props4.children, accessors = _this$props4.accessors, components = _this$props4.components, getters = _this$props4.getters, slotMetrics = _this$props4.slotMetrics, localizer = _this$props4.localizer;
          var _this$state = this.state, event = _this$state.event, top = _this$state.top, height2 = _this$state.height;
          if (!event)
            return children;
          var events = children.props.children;
          var start = event.start, end = event.end;
          var label;
          var format = "eventTimeRangeFormat";
          var startsBeforeDay = slotMetrics.startsBeforeDay(start);
          var startsAfterDay = slotMetrics.startsAfterDay(end);
          if (startsBeforeDay)
            format = "eventTimeRangeEndFormat";
          else if (startsAfterDay)
            format = "eventTimeRangeStartFormat";
          if (startsBeforeDay && startsAfterDay)
            label = localizer.messages.allDay;
          else
            label = localizer.format({
              start,
              end
            }, format);
          return _react.default.cloneElement(children, {
            children: _react.default.createElement(_react.default.Fragment, null, events, event && _react.default.createElement(_TimeGridEvent.default, {
              event,
              label,
              className: "rbc-addons-dnd-drag-preview",
              style: {
                top,
                height: height2,
                width: 100
              },
              getters,
              components,
              accessors: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, accessors), _common.dragAccessors),
              continuesPrior: startsBeforeDay,
              continuesAfter: startsAfterDay
            }))
          });
        }
      }, {
        key: "render",
        value: function render() {
          return _react.default.createElement("div", {
            ref: this.ref
          }, this.renderContent());
        }
      }]);
      return EventContainerWrapper2;
    }(_react.default.Component);
    EventContainerWrapper.contextType = _DnDContext.DnDContext;
    var _default = EventContainerWrapper;
    exports.default = _default;
  }
});

// node_modules/@babel/runtime/helpers/arrayLikeToArray.js
var require_arrayLikeToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayLikeToArray.js"(exports, module) {
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/arrayWithoutHoles.js
var require_arrayWithoutHoles = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayWithoutHoles.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return arrayLikeToArray(arr);
    }
    module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/iterableToArray.js
var require_iterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/iterableToArray.js"(exports, module) {
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js
var require_unsupportedIterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return arrayLikeToArray(o, minLen);
    }
    module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/nonIterableSpread.js
var require_nonIterableSpread = __commonJS({
  "node_modules/@babel/runtime/helpers/nonIterableSpread.js"(exports, module) {
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/toConsumableArray.js
var require_toConsumableArray = __commonJS({
  "node_modules/@babel/runtime/helpers/toConsumableArray.js"(exports, module) {
    var arrayWithoutHoles = require_arrayWithoutHoles();
    var iterableToArray = require_iterableToArray();
    var unsupportedIterableToArray = require_unsupportedIterableToArray();
    var nonIterableSpread = require_nonIterableSpread();
    function _toConsumableArray(arr) {
      return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
    }
    module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/react-big-calendar/lib/EventCell.js
var require_EventCell = __commonJS({
  "node_modules/react-big-calendar/lib/EventCell.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _createSuper2 = _interopRequireDefault(require_createSuper());
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _excluded = ["style", "className", "event", "selected", "isAllDay", "onSelect", "onDoubleClick", "onKeyPress", "localizer", "continuesPrior", "continuesAfter", "accessors", "getters", "children", "components", "slotStart", "slotEnd"];
    var EventCell = function(_React$Component) {
      (0, _inherits2.default)(EventCell2, _React$Component);
      var _super = (0, _createSuper2.default)(EventCell2);
      function EventCell2() {
        (0, _classCallCheck2.default)(this, EventCell2);
        return _super.apply(this, arguments);
      }
      (0, _createClass2.default)(EventCell2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, style = _this$props.style, className = _this$props.className, event = _this$props.event, selected = _this$props.selected, isAllDay = _this$props.isAllDay, onSelect = _this$props.onSelect, _onDoubleClick = _this$props.onDoubleClick, _onKeyPress = _this$props.onKeyPress, localizer = _this$props.localizer, continuesPrior = _this$props.continuesPrior, continuesAfter = _this$props.continuesAfter, accessors = _this$props.accessors, getters = _this$props.getters, children = _this$props.children, _this$props$component = _this$props.components, Event = _this$props$component.event, EventWrapper = _this$props$component.eventWrapper, slotStart = _this$props.slotStart, slotEnd = _this$props.slotEnd, props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);
          delete props.resizable;
          var title = accessors.title(event);
          var tooltip = accessors.tooltip(event);
          var end = accessors.end(event);
          var start = accessors.start(event);
          var allDay = accessors.allDay(event);
          var showAsAllDay = isAllDay || allDay || localizer.diff(start, localizer.ceil(end, "day"), "day") > 1;
          var userProps = getters.eventProp(event, start, end, selected);
          var content = _react.default.createElement("div", {
            className: "rbc-event-content",
            title: tooltip || void 0
          }, Event ? _react.default.createElement(Event, {
            event,
            continuesPrior,
            continuesAfter,
            title,
            isAllDay: allDay,
            localizer,
            slotStart,
            slotEnd
          }) : title);
          return _react.default.createElement(EventWrapper, Object.assign({}, this.props, {
            type: "date"
          }), _react.default.createElement("div", Object.assign({}, props, {
            tabIndex: 0,
            style: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, userProps.style), style),
            className: (0, _clsx.default)("rbc-event", className, userProps.className, {
              "rbc-selected": selected,
              "rbc-event-allday": showAsAllDay,
              "rbc-event-continues-prior": continuesPrior,
              "rbc-event-continues-after": continuesAfter
            }),
            onClick: function onClick(e) {
              return onSelect && onSelect(event, e);
            },
            onDoubleClick: function onDoubleClick(e) {
              return _onDoubleClick && _onDoubleClick(event, e);
            },
            onKeyPress: function onKeyPress(e) {
              return _onKeyPress && _onKeyPress(event, e);
            }
          }), typeof children === "function" ? children(content) : content));
        }
      }]);
      return EventCell2;
    }(_react.default.Component);
    var _default = EventCell;
    exports.default = _default;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "node_modules/lodash/_freeGlobal.js"(exports, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// node_modules/lodash/_root.js
var require_root = __commonJS({
  "node_modules/lodash/_root.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "node_modules/lodash/_Symbol.js"(exports, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "node_modules/lodash/_getRawTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "node_modules/lodash/_objectToString.js"(exports, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "node_modules/lodash/_baseGetTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "node_modules/lodash/isObject.js"(exports, module) {
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject;
  }
});

// node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "node_modules/lodash/isFunction.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObject = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map = getNative(root, "Map");
    module.exports = Map;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array = root.Uint8Array;
    module.exports = Uint8Array;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var Uint8Array = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset2 = array.length;
      while (++index < length) {
        array[offset2 + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/isArray.js
var require_isArray = __commonJS({
  "node_modules/lodash/isArray.js"(exports, module) {
    var isArray = Array.isArray;
    module.exports = isArray;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_baseTimes.js
var require_baseTimes = __commonJS({
  "node_modules/lodash/_baseTimes.js"(exports, module) {
    function baseTimes(n, iteratee) {
      var index = -1, result = Array(n);
      while (++index < n) {
        result[index] = iteratee(index);
      }
      return result;
    }
    module.exports = baseTimes;
  }
});

// node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "node_modules/lodash/isObjectLike.js"(exports, module) {
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike;
  }
});

// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = __commonJS({
  "node_modules/lodash/_baseIsArguments.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    module.exports = baseIsArguments;
  }
});

// node_modules/lodash/isArguments.js
var require_isArguments = __commonJS({
  "node_modules/lodash/isArguments.js"(exports, module) {
    var baseIsArguments = require_baseIsArguments();
    var isObjectLike = require_isObjectLike();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var isArguments = baseIsArguments(function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    module.exports = isArguments;
  }
});

// node_modules/lodash/stubFalse.js
var require_stubFalse = __commonJS({
  "node_modules/lodash/stubFalse.js"(exports, module) {
    function stubFalse() {
      return false;
    }
    module.exports = stubFalse;
  }
});

// node_modules/lodash/isBuffer.js
var require_isBuffer = __commonJS({
  "node_modules/lodash/isBuffer.js"(exports, module) {
    var root = require_root();
    var stubFalse = require_stubFalse();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var Buffer = moduleExports ? root.Buffer : void 0;
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
    var isBuffer = nativeIsBuffer || stubFalse;
    module.exports = isBuffer;
  }
});

// node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "node_modules/lodash/_isIndex.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "node_modules/lodash/isLength.js"(exports, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = __commonJS({
  "node_modules/lodash/_baseIsTypedArray.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isLength = require_isLength();
    var isObjectLike = require_isObjectLike();
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    module.exports = baseIsTypedArray;
  }
});

// node_modules/lodash/_baseUnary.js
var require_baseUnary = __commonJS({
  "node_modules/lodash/_baseUnary.js"(exports, module) {
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    module.exports = baseUnary;
  }
});

// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = __commonJS({
  "node_modules/lodash/_nodeUtil.js"(exports, module) {
    var freeGlobal = require_freeGlobal();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        var types = freeModule && freeModule.require && freeModule.require("util").types;
        if (types) {
          return types;
        }
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    module.exports = nodeUtil;
  }
});

// node_modules/lodash/isTypedArray.js
var require_isTypedArray = __commonJS({
  "node_modules/lodash/isTypedArray.js"(exports, module) {
    var baseIsTypedArray = require_baseIsTypedArray();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    module.exports = isTypedArray;
  }
});

// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = __commonJS({
  "node_modules/lodash/_arrayLikeKeys.js"(exports, module) {
    var baseTimes = require_baseTimes();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isIndex = require_isIndex();
    var isTypedArray = require_isTypedArray();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length)))) {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = arrayLikeKeys;
  }
});

// node_modules/lodash/_isPrototype.js
var require_isPrototype = __commonJS({
  "node_modules/lodash/_isPrototype.js"(exports, module) {
    var objectProto = Object.prototype;
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    module.exports = isPrototype;
  }
});

// node_modules/lodash/_overArg.js
var require_overArg = __commonJS({
  "node_modules/lodash/_overArg.js"(exports, module) {
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    module.exports = overArg;
  }
});

// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = __commonJS({
  "node_modules/lodash/_nativeKeys.js"(exports, module) {
    var overArg = require_overArg();
    var nativeKeys = overArg(Object.keys, Object);
    module.exports = nativeKeys;
  }
});

// node_modules/lodash/_baseKeys.js
var require_baseKeys = __commonJS({
  "node_modules/lodash/_baseKeys.js"(exports, module) {
    var isPrototype = require_isPrototype();
    var nativeKeys = require_nativeKeys();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    module.exports = baseKeys;
  }
});

// node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "node_modules/lodash/isArrayLike.js"(exports, module) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// node_modules/lodash/keys.js
var require_keys = __commonJS({
  "node_modules/lodash/keys.js"(exports, module) {
    var arrayLikeKeys = require_arrayLikeKeys();
    var baseKeys = require_baseKeys();
    var isArrayLike = require_isArrayLike();
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    module.exports = keys;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set = getNative(root, "Set");
    module.exports = Set;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap2 = getNative(root, "WeakMap");
    module.exports = WeakMap2;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map = require_Map();
    var Promise2 = require_Promise();
    var Set = require_Set();
    var WeakMap2 = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set);
    var weakMapCtorString = toSource(WeakMap2);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/isEqual.js
var require_isEqual = __commonJS({
  "node_modules/lodash/isEqual.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    module.exports = isEqual;
  }
});

// node_modules/react-big-calendar/lib/utils/selection.js
var require_selection = __commonJS({
  "node_modules/react-big-calendar/lib/utils/selection.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.dateCellSelection = dateCellSelection;
    exports.getSlotAtX = getSlotAtX;
    exports.isSelected = isSelected;
    exports.pointInBox = pointInBox;
    exports.slotWidth = slotWidth;
    var _isEqual = _interopRequireDefault(require_isEqual());
    function isSelected(event, selected) {
      if (!event || selected == null)
        return false;
      return (0, _isEqual.default)(event, selected);
    }
    function slotWidth(rowBox, slots) {
      var rowWidth = rowBox.right - rowBox.left;
      var cellWidth = rowWidth / slots;
      return cellWidth;
    }
    function getSlotAtX(rowBox, x, rtl, slots) {
      var cellWidth = slotWidth(rowBox, slots);
      return rtl ? slots - 1 - Math.floor((x - rowBox.left) / cellWidth) : Math.floor((x - rowBox.left) / cellWidth);
    }
    function pointInBox(box, _ref) {
      var x = _ref.x, y = _ref.y;
      return y >= box.top && y <= box.bottom && x >= box.left && x <= box.right;
    }
    function dateCellSelection(start, rowBox, box, slots, rtl) {
      var startIdx = -1;
      var endIdx = -1;
      var lastSlotIdx = slots - 1;
      var cellWidth = slotWidth(rowBox, slots);
      var currentSlot = getSlotAtX(rowBox, box.x, rtl, slots);
      var isCurrentRow = rowBox.top < box.y && rowBox.bottom > box.y;
      var isStartRow = rowBox.top < start.y && rowBox.bottom > start.y;
      var isAboveStart = start.y > rowBox.bottom;
      var isBelowStart = rowBox.top > start.y;
      var isBetween = box.top < rowBox.top && box.bottom > rowBox.bottom;
      if (isBetween) {
        startIdx = 0;
        endIdx = lastSlotIdx;
      }
      if (isCurrentRow) {
        if (isBelowStart) {
          startIdx = 0;
          endIdx = currentSlot;
        } else if (isAboveStart) {
          startIdx = currentSlot;
          endIdx = lastSlotIdx;
        }
      }
      if (isStartRow) {
        startIdx = endIdx = rtl ? lastSlotIdx - Math.floor((start.x - rowBox.left) / cellWidth) : Math.floor((start.x - rowBox.left) / cellWidth);
        if (isCurrentRow) {
          if (currentSlot < startIdx)
            startIdx = currentSlot;
          else
            endIdx = currentSlot;
        } else if (start.y < box.y) {
          endIdx = lastSlotIdx;
        } else {
          startIdx = 0;
        }
      }
      return {
        startIdx,
        endIdx
      };
    }
  }
});

// node_modules/react-big-calendar/lib/EventRowMixin.js
var require_EventRowMixin = __commonJS({
  "node_modules/react-big-calendar/lib/EventRowMixin.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _react = _interopRequireDefault(require_react());
    var _EventCell = _interopRequireDefault(require_EventCell());
    var _selection = require_selection();
    var _default = {
      propTypes: {
        slotMetrics: _propTypes.default.object.isRequired,
        selected: _propTypes.default.object,
        isAllDay: _propTypes.default.bool,
        accessors: _propTypes.default.object.isRequired,
        localizer: _propTypes.default.object.isRequired,
        components: _propTypes.default.object.isRequired,
        getters: _propTypes.default.object.isRequired,
        onSelect: _propTypes.default.func,
        onDoubleClick: _propTypes.default.func,
        onKeyPress: _propTypes.default.func
      },
      defaultProps: {
        segments: [],
        selected: {}
      },
      renderEvent: function renderEvent(props, event) {
        var selected = props.selected, _ = props.isAllDay, accessors = props.accessors, getters = props.getters, onSelect = props.onSelect, onDoubleClick = props.onDoubleClick, onKeyPress = props.onKeyPress, localizer = props.localizer, slotMetrics = props.slotMetrics, components = props.components, resizable = props.resizable;
        var continuesPrior = slotMetrics.continuesPrior(event);
        var continuesAfter = slotMetrics.continuesAfter(event);
        return _react.default.createElement(_EventCell.default, {
          event,
          getters,
          localizer,
          accessors,
          components,
          onSelect,
          onDoubleClick,
          onKeyPress,
          continuesPrior,
          continuesAfter,
          slotStart: slotMetrics.first,
          slotEnd: slotMetrics.last,
          selected: (0, _selection.isSelected)(event, selected),
          resizable
        });
      },
      renderSpan: function renderSpan(slots, len, key) {
        var content = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : " ";
        var per = Math.abs(len) / slots * 100 + "%";
        return _react.default.createElement("div", {
          key,
          className: "rbc-row-segment",
          style: {
            WebkitFlexBasis: per,
            flexBasis: per,
            maxWidth: per
          }
        }, content);
      }
    };
    exports.default = _default;
  }
});

// node_modules/react-big-calendar/lib/EventRow.js
var require_EventRow = __commonJS({
  "node_modules/react-big-calendar/lib/EventRow.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _createSuper2 = _interopRequireDefault(require_createSuper());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _react = _interopRequireDefault(require_react());
    var _EventRowMixin = _interopRequireDefault(require_EventRowMixin());
    var EventRow = function(_React$Component) {
      (0, _inherits2.default)(EventRow2, _React$Component);
      var _super = (0, _createSuper2.default)(EventRow2);
      function EventRow2() {
        (0, _classCallCheck2.default)(this, EventRow2);
        return _super.apply(this, arguments);
      }
      (0, _createClass2.default)(EventRow2, [{
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props = this.props, segments = _this$props.segments, slots = _this$props.slotMetrics.slots, className = _this$props.className;
          var lastEnd = 1;
          return _react.default.createElement("div", {
            className: (0, _clsx.default)(className, "rbc-row")
          }, segments.reduce(function(row, _ref, li) {
            var event = _ref.event, left = _ref.left, right = _ref.right, span = _ref.span;
            var key = "_lvl_" + li;
            var gap = left - lastEnd;
            var content = _EventRowMixin.default.renderEvent(_this.props, event);
            if (gap)
              row.push(_EventRowMixin.default.renderSpan(slots, gap, "".concat(key, "_gap")));
            row.push(_EventRowMixin.default.renderSpan(slots, span, key, content));
            lastEnd = right + 1;
            return row;
          }, []));
        }
      }]);
      return EventRow2;
    }(_react.default.Component);
    EventRow.defaultProps = (0, _objectSpread2.default)({}, _EventRowMixin.default.defaultProps);
    var _default = EventRow;
    exports.default = _default;
  }
});

// node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "node_modules/lodash/_baseFindIndex.js"(exports, module) {
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_arrayMap.js
var require_arrayMap = __commonJS({
  "node_modules/lodash/_arrayMap.js"(exports, module) {
    function arrayMap(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length, result = Array(length);
      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }
    module.exports = arrayMap;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol2 = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/toFinite.js
var require_toFinite = __commonJS({
  "node_modules/lodash/toFinite.js"(exports, module) {
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module.exports = toFinite;
  }
});

// node_modules/lodash/toInteger.js
var require_toInteger = __commonJS({
  "node_modules/lodash/toInteger.js"(exports, module) {
    var toFinite = require_toFinite();
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module.exports = toInteger;
  }
});

// node_modules/lodash/findIndex.js
var require_findIndex = __commonJS({
  "node_modules/lodash/findIndex.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIteratee = require_baseIteratee();
    var toInteger = require_toInteger();
    var nativeMax = Math.max;
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, baseIteratee(predicate, 3), index);
    }
    module.exports = findIndex;
  }
});

// node_modules/react-big-calendar/lib/utils/eventLevels.js
var require_eventLevels = __commonJS({
  "node_modules/react-big-calendar/lib/utils/eventLevels.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.endOfRange = endOfRange;
    exports.eventLevels = eventLevels;
    exports.eventSegments = eventSegments;
    exports.inRange = inRange;
    exports.segsOverlap = segsOverlap;
    exports.sortEvents = sortEvents;
    var _findIndex = _interopRequireDefault(require_findIndex());
    function endOfRange(_ref) {
      var dateRange = _ref.dateRange, _ref$unit = _ref.unit, unit = _ref$unit === void 0 ? "day" : _ref$unit, localizer = _ref.localizer;
      return {
        first: dateRange[0],
        last: localizer.add(dateRange[dateRange.length - 1], 1, unit)
      };
    }
    function eventSegments(event, range, accessors, localizer) {
      var _endOfRange = endOfRange({
        dateRange: range,
        localizer
      }), first = _endOfRange.first, last = _endOfRange.last;
      var slots = localizer.diff(first, last, "day");
      var start = localizer.max(localizer.startOf(accessors.start(event), "day"), first);
      var end = localizer.min(localizer.ceil(accessors.end(event), "day"), last);
      var padding = (0, _findIndex.default)(range, function(x) {
        return localizer.isSameDate(x, start);
      });
      var span = localizer.diff(start, end, "day");
      span = Math.min(span, slots);
      span = Math.max(span - localizer.segmentOffset, 1);
      return {
        event,
        span,
        left: padding + 1,
        right: Math.max(padding + span, 1)
      };
    }
    function eventLevels(rowSegments) {
      var limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Infinity;
      var i, j, seg, levels = [], extra = [];
      for (i = 0; i < rowSegments.length; i++) {
        seg = rowSegments[i];
        for (j = 0; j < levels.length; j++)
          if (!segsOverlap(seg, levels[j]))
            break;
        if (j >= limit) {
          extra.push(seg);
        } else {
          ;
          (levels[j] || (levels[j] = [])).push(seg);
        }
      }
      for (i = 0; i < levels.length; i++) {
        levels[i].sort(function(a, b) {
          return a.left - b.left;
        });
      }
      return {
        levels,
        extra
      };
    }
    function inRange(e, start, end, accessors, localizer) {
      var event = {
        start: accessors.start(e),
        end: accessors.end(e)
      };
      var range = {
        start,
        end
      };
      return localizer.inEventRange({
        event,
        range
      });
    }
    function segsOverlap(seg, otherSegs) {
      return otherSegs.some(function(otherSeg) {
        return otherSeg.left <= seg.right && otherSeg.right >= seg.left;
      });
    }
    function sortEvents(eventA, eventB, accessors, localizer) {
      var evtA = {
        start: accessors.start(eventA),
        end: accessors.end(eventA),
        allDay: accessors.allDay(eventA)
      };
      var evtB = {
        start: accessors.start(eventB),
        end: accessors.end(eventB),
        allDay: accessors.allDay(eventB)
      };
      return localizer.sortEvents({
        evtA,
        evtB
      });
    }
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/WeekWrapper.js
var require_WeekWrapper = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/WeekWrapper.js"(exports) {
    "use strict";
    var _interopRequireWildcard = require_interopRequireWildcard().default;
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _toConsumableArray2 = _interopRequireDefault(require_toConsumableArray());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _createSuper2 = _interopRequireDefault(require_createSuper());
    var _react = _interopRequireDefault(require_react());
    var _EventRow = _interopRequireDefault(require_EventRow());
    var _Selection = _interopRequireWildcard(require_Selection());
    var _eventLevels = require_eventLevels();
    var _selection = require_selection();
    var _common = require_common();
    var _DnDContext = require_DnDContext();
    var WeekWrapper = function(_React$Component) {
      (0, _inherits2.default)(WeekWrapper2, _React$Component);
      var _super = (0, _createSuper2.default)(WeekWrapper2);
      function WeekWrapper2() {
        var _this;
        (0, _classCallCheck2.default)(this, WeekWrapper2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _this.handleMove = function(point, bounds, draggedEvent) {
          if (!(0, _selection.pointInBox)(bounds, point))
            return _this.reset();
          var event = _this.context.draggable.dragAndDropAction.event || draggedEvent;
          var _this$props = _this.props, accessors = _this$props.accessors, slotMetrics = _this$props.slotMetrics, rtl = _this$props.rtl, localizer = _this$props.localizer;
          var slot = (0, _selection.getSlotAtX)(bounds, point.x, rtl, slotMetrics.slots);
          var date = slotMetrics.getDateForSlot(slot);
          var _eventTimes = (0, _common.eventTimes)(event, accessors, localizer), start = _eventTimes.start, duration = _eventTimes.duration;
          start = localizer.merge(date, start);
          var end = localizer.add(start, duration, "milliseconds");
          _this.update(event, start, end);
        };
        _this.handleDropFromOutside = function(point, bounds) {
          if (!_this.context.draggable.onDropFromOutside)
            return;
          var _this$props2 = _this.props, slotMetrics = _this$props2.slotMetrics, rtl = _this$props2.rtl, localizer = _this$props2.localizer;
          var slot = (0, _selection.getSlotAtX)(bounds, point.x, rtl, slotMetrics.slots);
          var start = slotMetrics.getDateForSlot(slot);
          _this.context.draggable.onDropFromOutside({
            start,
            end: localizer.add(start, 1, "day"),
            allDay: false
          });
        };
        _this.handleDragOverFromOutside = function(point, node) {
          if (!_this.context.draggable.dragFromOutsideItem)
            return;
          _this.handleMove(point, node, _this.context.draggable.dragFromOutsideItem());
        };
        _this._selectable = function() {
          var node = _this.ref.current.closest(".rbc-month-row, .rbc-allday-cell");
          var container = node.closest(".rbc-month-view, .rbc-time-view");
          var isMonthRow = node.classList.contains("rbc-month-row");
          var selector = _this._selector = new _Selection.default(function() {
            return container;
          }, {
            validContainers: (0, _toConsumableArray2.default)(!isMonthRow ? [".rbc-day-slot", ".rbc-allday-cell"] : [])
          });
          selector.on("beforeSelect", function(point) {
            var isAllDay = _this.props.isAllDay;
            var action = _this.context.draggable.dragAndDropAction.action;
            var bounds = (0, _Selection.getBoundsForNode)(node);
            var isInBox = (0, _selection.pointInBox)(bounds, point);
            return action === "move" || action === "resize" && (!isAllDay || isInBox);
          });
          selector.on("selecting", function(box) {
            var bounds = (0, _Selection.getBoundsForNode)(node);
            var dragAndDropAction = _this.context.draggable.dragAndDropAction;
            if (dragAndDropAction.action === "move")
              _this.handleMove(box, bounds);
            if (dragAndDropAction.action === "resize")
              _this.handleResize(box, bounds);
          });
          selector.on("selectStart", function() {
            return _this.context.draggable.onStart();
          });
          selector.on("select", function(point) {
            var bounds = (0, _Selection.getBoundsForNode)(node);
            if (!_this.state.segment)
              return;
            if (!(0, _selection.pointInBox)(bounds, point)) {
              _this.reset();
            } else {
              _this.handleInteractionEnd();
            }
          });
          selector.on("dropFromOutside", function(point) {
            if (!_this.context.draggable.onDropFromOutside)
              return;
            var bounds = (0, _Selection.getBoundsForNode)(node);
            if (!(0, _selection.pointInBox)(bounds, point))
              return;
            _this.handleDropFromOutside(point, bounds);
          });
          selector.on("dragOverFromOutside", function(point) {
            if (!_this.context.draggable.dragFromOutsideItem)
              return;
            var bounds = (0, _Selection.getBoundsForNode)(node);
            _this.handleDragOverFromOutside(point, bounds);
          });
          selector.on("click", function() {
            return _this.context.draggable.onEnd(null);
          });
          selector.on("reset", function() {
            _this.reset();
            _this.context.draggable.onEnd(null);
          });
        };
        _this.handleInteractionEnd = function() {
          var _this$props3 = _this.props, resourceId = _this$props3.resourceId, isAllDay = _this$props3.isAllDay;
          var event = _this.state.segment.event;
          _this.reset();
          _this.context.draggable.onEnd({
            start: event.start,
            end: event.end,
            resourceId,
            isAllDay
          });
        };
        _this._teardownSelectable = function() {
          if (!_this._selector)
            return;
          _this._selector.teardown();
          _this._selector = null;
        };
        _this.state = {};
        _this.ref = _react.default.createRef();
        return _this;
      }
      (0, _createClass2.default)(WeekWrapper2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this._selectable();
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this._teardownSelectable();
        }
      }, {
        key: "reset",
        value: function reset2() {
          if (this.state.segment)
            this.setState({
              segment: null
            });
        }
      }, {
        key: "update",
        value: function update(event, start, end) {
          var segment = (0, _eventLevels.eventSegments)((0, _objectSpread2.default)((0, _objectSpread2.default)({}, event), {}, {
            end,
            start,
            __isPreview: true
          }), this.props.slotMetrics.range, _common.dragAccessors, this.props.localizer);
          var lastSegment = this.state.segment;
          if (lastSegment && segment.span === lastSegment.span && segment.left === lastSegment.left && segment.right === lastSegment.right) {
            return;
          }
          this.setState({
            segment
          });
        }
      }, {
        key: "handleResize",
        value: function handleResize(point, bounds) {
          var _this$context$draggab = this.context.draggable.dragAndDropAction, event = _this$context$draggab.event, direction = _this$context$draggab.direction;
          var _this$props4 = this.props, accessors = _this$props4.accessors, slotMetrics = _this$props4.slotMetrics, rtl = _this$props4.rtl, localizer = _this$props4.localizer;
          var _eventTimes2 = (0, _common.eventTimes)(event, accessors, localizer), start = _eventTimes2.start, end = _eventTimes2.end;
          var slot = (0, _selection.getSlotAtX)(bounds, point.x, rtl, slotMetrics.slots);
          var date = slotMetrics.getDateForSlot(slot);
          var cursorInRow = (0, _selection.pointInBox)(bounds, point);
          if (direction === "RIGHT") {
            if (cursorInRow) {
              if (slotMetrics.last < start)
                return this.reset();
              if (localizer.eq(localizer.startOf(end, "day"), end))
                end = localizer.add(date, 1, "day");
              else
                end = date;
            } else if (localizer.inRange(start, slotMetrics.first, slotMetrics.last) || bounds.bottom < point.y && +slotMetrics.first > +start) {
              end = localizer.add(slotMetrics.last, 1, "milliseconds");
            } else {
              this.setState({
                segment: null
              });
              return;
            }
            var originalEnd = accessors.end(event);
            end = localizer.merge(end, originalEnd);
            if (localizer.lt(end, start)) {
              end = originalEnd;
            }
          } else if (direction === "LEFT") {
            if (cursorInRow) {
              if (slotMetrics.first > end)
                return this.reset();
              start = date;
            } else if (localizer.inRange(end, slotMetrics.first, slotMetrics.last) || bounds.top > point.y && localizer.lt(slotMetrics.last, end)) {
              start = localizer.add(slotMetrics.first, -1, "milliseconds");
            } else {
              this.reset();
              return;
            }
            var originalStart = accessors.start(event);
            start = localizer.merge(start, originalStart);
            if (localizer.gt(start, end)) {
              start = originalStart;
            }
          }
          this.update(event, start, end);
        }
      }, {
        key: "render",
        value: function render() {
          var _this$props5 = this.props, children = _this$props5.children, accessors = _this$props5.accessors;
          var segment = this.state.segment;
          return _react.default.createElement("div", {
            ref: this.ref,
            className: "rbc-addons-dnd-row-body"
          }, children, segment && _react.default.createElement(_EventRow.default, Object.assign({}, this.props, {
            selected: null,
            className: "rbc-addons-dnd-drag-row",
            segments: [segment],
            accessors: (0, _objectSpread2.default)((0, _objectSpread2.default)({}, accessors), _common.dragAccessors)
          })));
        }
      }]);
      return WeekWrapper2;
    }(_react.default.Component);
    WeekWrapper.contextType = _DnDContext.DnDContext;
    var _default = WeekWrapper;
    exports.default = _default;
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/withDragAndDrop.js
var require_withDragAndDrop = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/withDragAndDrop.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = withDragAndDrop;
    var _objectSpread2 = _interopRequireDefault(require_objectSpread2());
    var _objectWithoutProperties2 = _interopRequireDefault(require_objectWithoutProperties());
    var _classCallCheck2 = _interopRequireDefault(require_classCallCheck());
    var _createClass2 = _interopRequireDefault(require_createClass());
    var _inherits2 = _interopRequireDefault(require_inherits());
    var _createSuper2 = _interopRequireDefault(require_createSuper());
    var _react = _interopRequireDefault(require_react());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _propTypes = require_propTypes();
    var _EventWrapper = _interopRequireDefault(require_EventWrapper());
    var _EventContainerWrapper = _interopRequireDefault(require_EventContainerWrapper());
    var _WeekWrapper = _interopRequireDefault(require_WeekWrapper());
    var _common = require_common();
    var _DnDContext = require_DnDContext();
    var _excluded = ["selectable", "elementProps"];
    function withDragAndDrop(Calendar) {
      var DragAndDropCalendar = function(_React$Component) {
        (0, _inherits2.default)(DragAndDropCalendar2, _React$Component);
        var _super = (0, _createSuper2.default)(DragAndDropCalendar2);
        function DragAndDropCalendar2() {
          var _this;
          (0, _classCallCheck2.default)(this, DragAndDropCalendar2);
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _super.call.apply(_super, [this].concat(args));
          _this.defaultOnDragOver = function(event) {
            event.preventDefault();
          };
          _this.handleBeginAction = function(event, action, direction) {
            _this.setState({
              event,
              action,
              direction
            });
            var onDragStart = _this.props.onDragStart;
            if (onDragStart)
              onDragStart({
                event,
                action,
                direction
              });
          };
          _this.handleInteractionStart = function() {
            if (_this.state.interacting === false)
              _this.setState({
                interacting: true
              });
          };
          _this.handleInteractionEnd = function(interactionInfo) {
            var _this$state = _this.state, action = _this$state.action, event = _this$state.event;
            if (!action)
              return;
            _this.setState({
              action: null,
              event: null,
              interacting: false,
              direction: null
            });
            if (interactionInfo == null)
              return;
            interactionInfo.event = event;
            var _this$props = _this.props, onEventDrop = _this$props.onEventDrop, onEventResize = _this$props.onEventResize;
            if (action === "move" && onEventDrop)
              onEventDrop(interactionInfo);
            if (action === "resize" && onEventResize)
              onEventResize(interactionInfo);
          };
          var components = _this.props.components;
          _this.components = (0, _common.mergeComponents)(components, {
            eventWrapper: _EventWrapper.default,
            eventContainerWrapper: _EventContainerWrapper.default,
            weekWrapper: _WeekWrapper.default
          });
          _this.state = {
            interacting: false
          };
          return _this;
        }
        (0, _createClass2.default)(DragAndDropCalendar2, [{
          key: "getDnDContextValue",
          value: function getDnDContextValue() {
            return {
              draggable: {
                onStart: this.handleInteractionStart,
                onEnd: this.handleInteractionEnd,
                onBeginAction: this.handleBeginAction,
                onDropFromOutside: this.props.onDropFromOutside,
                dragFromOutsideItem: this.props.dragFromOutsideItem,
                draggableAccessor: this.props.draggableAccessor,
                resizableAccessor: this.props.resizableAccessor,
                dragAndDropAction: this.state
              }
            };
          }
        }, {
          key: "render",
          value: function render() {
            var _this$props2 = this.props, selectable = _this$props2.selectable, elementProps = _this$props2.elementProps, props = (0, _objectWithoutProperties2.default)(_this$props2, _excluded);
            var interacting = this.state.interacting;
            delete props.onEventDrop;
            delete props.onEventResize;
            props.selectable = selectable ? "ignoreEvents" : false;
            var elementPropsWithDropFromOutside = this.props.onDropFromOutside ? (0, _objectSpread2.default)((0, _objectSpread2.default)({}, elementProps), {}, {
              onDragOver: this.props.onDragOver || this.defaultOnDragOver
            }) : elementProps;
            props.className = (0, _clsx.default)(props.className, "rbc-addons-dnd", !!interacting && "rbc-addons-dnd-is-dragging");
            var context = this.getDnDContextValue();
            return _react.default.createElement(_DnDContext.DnDContext.Provider, {
              value: context
            }, _react.default.createElement(Calendar, Object.assign({}, props, {
              elementProps: elementPropsWithDropFromOutside,
              components: this.components
            })));
          }
        }]);
        return DragAndDropCalendar2;
      }(_react.default.Component);
      DragAndDropCalendar.defaultProps = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, Calendar.defaultProps), {}, {
        draggableAccessor: null,
        resizableAccessor: null,
        resizable: true
      });
      return DragAndDropCalendar;
    }
  }
});

// node_modules/react-big-calendar/lib/addons/dragAndDrop/index.js
var require_dragAndDrop = __commonJS({
  "node_modules/react-big-calendar/lib/addons/dragAndDrop/index.js"(exports) {
    var _interopRequireDefault = require_interopRequireDefault().default;
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _withDragAndDrop = _interopRequireDefault(require_withDragAndDrop());
    var _default = _withDragAndDrop.default;
    exports.default = _default;
  }
});
export default require_dragAndDrop();
//# sourceMappingURL=react-big-calendar_lib_addons_dragAndDrop.js.map
