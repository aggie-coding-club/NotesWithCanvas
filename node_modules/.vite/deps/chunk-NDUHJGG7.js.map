{
  "version": 3,
  "sources": ["../../react-big-calendar/node_modules/clsx/dist/clsx.m.js", "../../dom-helpers/esm/animationFrame.js", "../../dom-helpers/esm/matches.js", "../../dom-helpers/esm/closest.js", "../../dom-helpers/esm/isDocument.js", "../../dom-helpers/esm/isWindow.js", "../../dom-helpers/esm/getScrollAccessor.js", "../../dom-helpers/esm/scrollLeft.js", "../../dom-helpers/esm/scrollTop.js", "../../dom-helpers/esm/offset.js", "../../dom-helpers/esm/height.js", "../../dom-helpers/esm/offsetParent.js", "../../dom-helpers/esm/position.js", "../../dom-helpers/esm/scrollbarSize.js", "../../dom-helpers/esm/width.js"],
  "sourcesContent": ["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import canUseDOM from './canUseDOM';\r\n\r\n/* https://github.com/component/raf */\r\nvar prev = new Date().getTime();\r\n\r\nfunction fallback(fn) {\r\n  var curr = new Date().getTime();\r\n  var ms = Math.max(0, 16 - (curr - prev));\r\n  var handle = setTimeout(fn, ms);\r\n  prev = curr;\r\n  return handle;\r\n}\r\n\r\nvar vendors = ['', 'webkit', 'moz', 'o', 'ms'];\r\nvar cancelMethod = 'clearTimeout';\r\nvar rafImpl = fallback; // eslint-disable-next-line import/no-mutable-exports\r\n\r\nvar getKey = function getKey(vendor, k) {\r\n  return vendor + (!vendor ? k : k[0].toUpperCase() + k.substr(1)) + \"AnimationFrame\";\r\n};\r\n\r\nif (canUseDOM) {\r\n  vendors.some(function (vendor) {\r\n    var rafMethod = getKey(vendor, 'request');\r\n\r\n    if (rafMethod in window) {\r\n      cancelMethod = getKey(vendor, 'cancel'); // @ts-ignore\r\n\r\n      rafImpl = function rafImpl(cb) {\r\n        return window[rafMethod](cb);\r\n      };\r\n    }\r\n\r\n    return !!rafImpl;\r\n  });\r\n}\r\n\r\nexport var cancel = function cancel(id) {\r\n  // @ts-ignore\r\n  if (typeof window[cancelMethod] === 'function') window[cancelMethod](id);\r\n};\r\nexport var request = rafImpl;", "var matchesImpl;\r\n/**\r\n * Checks if a given element matches a selector.\r\n * \r\n * @param node the element\r\n * @param selector the selector\r\n */\r\n\r\nexport default function matches(node, selector) {\r\n  if (!matchesImpl) {\r\n    var body = document.body;\r\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\r\n\r\n    matchesImpl = function matchesImpl(n, s) {\r\n      return nativeMatch.call(n, s);\r\n    };\r\n  }\r\n\r\n  return matchesImpl(node, selector);\r\n}", "import matches from './matches';\r\n/**\r\n * Returns the closest parent element that matches a given selector.\r\n * \r\n * @param node the reference element\r\n * @param selector the selector to match\r\n * @param stopAt stop traversing when this element is found\r\n */\r\n\r\nexport default function closest(node, selector, stopAt) {\r\n  if (node.closest && !stopAt) node.closest(selector);\r\n  var nextNode = node;\r\n\r\n  do {\r\n    if (matches(nextNode, selector)) return nextNode;\r\n    nextNode = nextNode.parentElement;\r\n  } while (nextNode && nextNode !== stopAt && nextNode.nodeType === document.ELEMENT_NODE);\r\n\r\n  return null;\r\n}", "export default function isDocument(element) {\r\n  return 'nodeType' in element && element.nodeType === document.DOCUMENT_NODE;\r\n}", "import isDocument from './isDocument';\r\nexport default function isWindow(node) {\r\n  if ('window' in node && node.window === node) return node;\r\n  if (isDocument(node)) return node.defaultView || false;\r\n  return false;\r\n}", "import isWindow from './isWindow';\r\nexport default function getscrollAccessor(offset) {\r\n  var prop = offset === 'pageXOffset' ? 'scrollLeft' : 'scrollTop';\r\n\r\n  function scrollAccessor(node, val) {\r\n    var win = isWindow(node);\r\n\r\n    if (val === undefined) {\r\n      return win ? win[offset] : node[prop];\r\n    }\r\n\r\n    if (win) {\r\n      win.scrollTo(win[offset], val);\r\n    } else {\r\n      node[prop] = val;\r\n    }\r\n  }\r\n\r\n  return scrollAccessor;\r\n}", "import getScrollAccessor from './getScrollAccessor';\r\n/**\r\n * Gets or sets the scroll left position of a given element.\r\n * \r\n * @param node the element\r\n * @param val the position to set\r\n */\r\n\r\nexport default getScrollAccessor('pageXOffset');", "import getScrollAccessor from './getScrollAccessor';\r\n/**\r\n * Gets or sets the scroll top position of a given element.\r\n * \r\n * @param node the element\r\n * @param val the position to set\r\n */\r\n\r\nexport default getScrollAccessor('pageYOffset');", "import contains from './contains';\r\nimport ownerDocument from './ownerDocument';\r\nimport scrollLeft from './scrollLeft';\r\nimport scrollTop from './scrollTop';\r\n/**\r\n * Returns the offset of a given element, including top and left positions, width and height.\r\n * \r\n * @param node the element\r\n */\r\n\r\nexport default function offset(node) {\r\n  var doc = ownerDocument(node);\r\n  var box = {\r\n    top: 0,\r\n    left: 0,\r\n    height: 0,\r\n    width: 0\r\n  };\r\n  var docElem = doc && doc.documentElement; // Make sure it's not a disconnected DOM node\r\n\r\n  if (!docElem || !contains(docElem, node)) return box;\r\n  if (node.getBoundingClientRect !== undefined) box = node.getBoundingClientRect();\r\n  box = {\r\n    top: box.top + scrollTop(docElem) - (docElem.clientTop || 0),\r\n    left: box.left + scrollLeft(docElem) - (docElem.clientLeft || 0),\r\n    width: box.width,\r\n    height: box.height\r\n  };\r\n  return box;\r\n}", "import getWindow from './isWindow';\r\nimport offset from './offset';\r\n/**\r\n * Returns the height of a given element.\r\n * \r\n * @param node the element\r\n * @param client whether to use `clientHeight` if possible\r\n */\r\n\r\nexport default function height(node, client) {\r\n  var win = getWindow(node);\r\n  return win ? win.innerHeight : client ? node.clientHeight : offset(node).height;\r\n}", "import css from './css';\r\nimport ownerDocument from './ownerDocument';\r\n\r\nvar isHTMLElement = function isHTMLElement(e) {\r\n  return !!e && 'offsetParent' in e;\r\n};\r\n\r\nexport default function offsetParent(node) {\r\n  var doc = ownerDocument(node);\r\n  var parent = node && node.offsetParent;\r\n\r\n  while (isHTMLElement(parent) && parent.nodeName !== 'HTML' && css(parent, 'position') === 'static') {\r\n    parent = parent.offsetParent;\r\n  }\r\n\r\n  return parent || doc.documentElement;\r\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport css from './css';\r\nimport getOffset from './offset';\r\nimport getOffsetParent from './offsetParent';\r\nimport scrollLeft from './scrollLeft';\r\nimport scrollTop from './scrollTop';\r\n\r\nvar nodeName = function nodeName(node) {\r\n  return node.nodeName && node.nodeName.toLowerCase();\r\n};\r\n/**\r\n * Returns the relative position of a given element.\r\n * \r\n * @param node the element\r\n * @param offsetParent the offset parent\r\n */\r\n\r\n\r\nexport default function position(node, offsetParent) {\r\n  var parentOffset = {\r\n    top: 0,\r\n    left: 0\r\n  };\r\n  var offset; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\r\n  // because it is its only offset parent\r\n\r\n  if (css(node, 'position') === 'fixed') {\r\n    offset = node.getBoundingClientRect();\r\n  } else {\r\n    var parent = offsetParent || getOffsetParent(node);\r\n    offset = getOffset(node);\r\n    if (nodeName(parent) !== 'html') parentOffset = getOffset(parent);\r\n    var borderTop = String(css(parent, 'borderTopWidth') || 0);\r\n    parentOffset.top += parseInt(borderTop, 10) - scrollTop(parent) || 0;\r\n    var borderLeft = String(css(parent, 'borderLeftWidth') || 0);\r\n    parentOffset.left += parseInt(borderLeft, 10) - scrollLeft(parent) || 0;\r\n  }\r\n\r\n  var marginTop = String(css(node, 'marginTop') || 0);\r\n  var marginLeft = String(css(node, 'marginLeft') || 0); // Subtract parent offsets and node margins\r\n\r\n  return _extends({}, offset, {\r\n    top: offset.top - parentOffset.top - (parseInt(marginTop, 10) || 0),\r\n    left: offset.left - parentOffset.left - (parseInt(marginLeft, 10) || 0)\r\n  });\r\n}", "import canUseDOM from './canUseDOM';\r\nvar size;\r\nexport default function scrollbarSize(recalc) {\r\n  if (!size && size !== 0 || recalc) {\r\n    if (canUseDOM) {\r\n      var scrollDiv = document.createElement('div');\r\n      scrollDiv.style.position = 'absolute';\r\n      scrollDiv.style.top = '-9999px';\r\n      scrollDiv.style.width = '50px';\r\n      scrollDiv.style.height = '50px';\r\n      scrollDiv.style.overflow = 'scroll';\r\n      document.body.appendChild(scrollDiv);\r\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\r\n      document.body.removeChild(scrollDiv);\r\n    }\r\n  }\r\n\r\n  return size;\r\n}", "import getWindow from './isWindow';\r\nimport offset from './offset';\r\n/**\r\n * Returns the width of a given element.\r\n * \r\n * @param node the element\r\n * @param client whether to use `clientWidth` if possible\r\n */\r\n\r\nexport default function getWidth(node, client) {\r\n  var win = getWindow(node);\r\n  return win ? win.innerWidth : client ? node.clientWidth : offset(node).width;\r\n}"],
  "mappings": "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",
  "names": ["getKey", "rafImpl", "cancel", "matchesImpl", "offset", "isHTMLElement", "offsetParent", "offset", "nodeName"]
}
