import {
  __esm,
  __export
} from "./chunk-AUZ3RYOM.js";

// node_modules/dom-helpers/esm/canUseDOM.js
var canUseDOM_default;
var init_canUseDOM = __esm({
  "node_modules/dom-helpers/esm/canUseDOM.js"() {
    canUseDOM_default = !!(typeof window !== "undefined" && window.document && window.document.createElement);
  }
});

// node_modules/dom-helpers/esm/addEventListener.js
function addEventListener(node, eventName, handler, options) {
  if (options && typeof options !== "boolean" && !onceSupported) {
    var once = options.once, capture = options.capture;
    var wrappedHandler = handler;
    if (!onceSupported && once) {
      wrappedHandler = handler.__once || function onceHandler(event) {
        this.removeEventListener(eventName, onceHandler, capture);
        handler.call(this, event);
      };
      handler.__once = wrappedHandler;
    }
    node.addEventListener(eventName, wrappedHandler, optionsSupported ? options : capture);
  }
  node.addEventListener(eventName, handler, options);
}
var optionsSupported, onceSupported, options, addEventListener_default;
var init_addEventListener = __esm({
  "node_modules/dom-helpers/esm/addEventListener.js"() {
    init_canUseDOM();
    optionsSupported = false;
    onceSupported = false;
    try {
      options = {
        get passive() {
          return optionsSupported = true;
        },
        get once() {
          return onceSupported = optionsSupported = true;
        }
      };
      if (canUseDOM_default) {
        window.addEventListener("test", options, options);
        window.removeEventListener("test", options, true);
      }
    } catch (e) {
    }
    addEventListener_default = addEventListener;
  }
});

// node_modules/dom-helpers/esm/removeEventListener.js
function removeEventListener(node, eventName, handler, options) {
  var capture = options && typeof options !== "boolean" ? options.capture : options;
  node.removeEventListener(eventName, handler, capture);
  if (handler.__once) {
    node.removeEventListener(eventName, handler.__once, capture);
  }
}
var removeEventListener_default;
var init_removeEventListener = __esm({
  "node_modules/dom-helpers/esm/removeEventListener.js"() {
    removeEventListener_default = removeEventListener;
  }
});

// node_modules/dom-helpers/esm/listen.js
var listen_exports = {};
__export(listen_exports, {
  default: () => listen_default
});
function listen(node, eventName, handler, options) {
  addEventListener_default(node, eventName, handler, options);
  return function() {
    removeEventListener_default(node, eventName, handler, options);
  };
}
var listen_default;
var init_listen = __esm({
  "node_modules/dom-helpers/esm/listen.js"() {
    init_addEventListener();
    init_removeEventListener();
    listen_default = listen;
  }
});

// node_modules/dom-helpers/esm/contains.js
var contains_exports = {};
__export(contains_exports, {
  default: () => contains
});
function contains(context, node) {
  if (context.contains)
    return context.contains(node);
  if (context.compareDocumentPosition)
    return context === node || !!(context.compareDocumentPosition(node) & 16);
}
var init_contains = __esm({
  "node_modules/dom-helpers/esm/contains.js"() {
  }
});

// node_modules/dom-helpers/esm/ownerDocument.js
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}
var init_ownerDocument = __esm({
  "node_modules/dom-helpers/esm/ownerDocument.js"() {
  }
});

export {
  ownerDocument,
  init_ownerDocument,
  canUseDOM_default,
  init_canUseDOM,
  addEventListener_default,
  init_addEventListener,
  removeEventListener_default,
  init_removeEventListener,
  listen_default,
  listen_exports,
  init_listen,
  contains,
  contains_exports,
  init_contains
};
//# sourceMappingURL=chunk-2QYR4MTP.js.map
