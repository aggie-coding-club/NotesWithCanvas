import {
  init_ownerDocument,
  ownerDocument
} from "./chunk-HTYTNMP3.js";
import {
  __esm
} from "./chunk-AUZ3RYOM.js";

// node_modules/dom-helpers/esm/ownerWindow.js
function ownerWindow(node) {
  var doc = ownerDocument(node);
  return doc && doc.defaultView || window;
}
var init_ownerWindow = __esm({
  "node_modules/dom-helpers/esm/ownerWindow.js"() {
    init_ownerDocument();
  }
});

// node_modules/dom-helpers/esm/getComputedStyle.js
function getComputedStyle(node, psuedoElement) {
  return ownerWindow(node).getComputedStyle(node, psuedoElement);
}
var init_getComputedStyle = __esm({
  "node_modules/dom-helpers/esm/getComputedStyle.js"() {
    init_ownerWindow();
  }
});

// node_modules/dom-helpers/esm/hyphenate.js
function hyphenate(string) {
  return string.replace(rUpper, "-$1").toLowerCase();
}
var rUpper;
var init_hyphenate = __esm({
  "node_modules/dom-helpers/esm/hyphenate.js"() {
    rUpper = /([A-Z])/g;
  }
});

// node_modules/dom-helpers/esm/hyphenateStyle.js
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, "-ms-");
}
var msPattern;
var init_hyphenateStyle = __esm({
  "node_modules/dom-helpers/esm/hyphenateStyle.js"() {
    init_hyphenate();
    msPattern = /^ms-/;
  }
});

// node_modules/dom-helpers/esm/isTransform.js
function isTransform(value) {
  return !!(value && supportedTransforms.test(value));
}
var supportedTransforms;
var init_isTransform = __esm({
  "node_modules/dom-helpers/esm/isTransform.js"() {
    supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;
  }
});

// node_modules/dom-helpers/esm/css.js
function style(node, property) {
  var css = "";
  var transforms = "";
  if (typeof property === "string") {
    return node.style.getPropertyValue(hyphenateStyleName(property)) || getComputedStyle(node).getPropertyValue(hyphenateStyleName(property));
  }
  Object.keys(property).forEach(function(key) {
    var value = property[key];
    if (!value && value !== 0) {
      node.style.removeProperty(hyphenateStyleName(key));
    } else if (isTransform(key)) {
      transforms += key + "(" + value + ") ";
    } else {
      css += hyphenateStyleName(key) + ": " + value + ";";
    }
  });
  if (transforms) {
    css += "transform: " + transforms + ";";
  }
  node.style.cssText += ";" + css;
}
var css_default;
var init_css = __esm({
  "node_modules/dom-helpers/esm/css.js"() {
    init_getComputedStyle();
    init_hyphenateStyle();
    init_isTransform();
    css_default = style;
  }
});

// node_modules/dom-helpers/esm/activeElement.js
function activeElement(doc) {
  if (doc === void 0) {
    doc = ownerDocument();
  }
  try {
    var active = doc.activeElement;
    if (!active || !active.nodeName)
      return null;
    return active;
  } catch (e) {
    return doc.body;
  }
}
var init_activeElement = __esm({
  "node_modules/dom-helpers/esm/activeElement.js"() {
    init_ownerDocument();
  }
});

export {
  activeElement,
  init_activeElement,
  ownerWindow,
  init_ownerWindow,
  getComputedStyle,
  init_getComputedStyle,
  hyphenate,
  init_hyphenate,
  isTransform,
  init_isTransform,
  css_default,
  init_css
};
//# sourceMappingURL=chunk-AFZALLLU.js.map
